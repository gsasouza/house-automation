{"id":"../../../node_modules/batch-processor/src/batch-processor.js","dependencies":[{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\packages\\web\\package.json","includedInParent":true,"mtime":1561056196910},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\batch-processor\\package.json","includedInParent":true,"mtime":1561056176730},{"name":"./utils","loc":{"line":3,"column":20},"parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\batch-processor\\src\\batch-processor.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\batch-processor\\src\\utils.js"},{"name":"process","parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\batch-processor\\src\\batch-processor.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\n\"use strict\";\n\nvar utils = require(\"./utils\");\n\nmodule.exports = function batchProcessorMaker(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var asyncProcess    = utils.getOption(options, \"async\", true);\n    var autoProcess     = utils.getOption(options, \"auto\", true);\n\n    if(autoProcess && !asyncProcess) {\n        reporter && reporter.warn(\"Invalid options combination. auto=true and async=false is invalid. Setting async=true.\");\n        asyncProcess = true;\n    }\n\n    var batch = Batch();\n    var asyncFrameHandler;\n    var isProcessing = false;\n\n    function addFunction(level, fn) {\n        if(!isProcessing && autoProcess && asyncProcess && batch.size() === 0) {\n            // Since this is async, it is guaranteed to be executed after that the fn is added to the batch.\n            // This needs to be done before, since we're checking the size of the batch to be 0.\n            processBatchAsync();\n        }\n\n        batch.add(level, fn);\n    }\n\n    function processBatch() {\n        // Save the current batch, and create a new batch so that incoming functions are not added into the currently processing batch.\n        // Continue processing until the top-level batch is empty (functions may be added to the new batch while processing, and so on).\n        isProcessing = true;\n        while (batch.size()) {\n            var processingBatch = batch;\n            batch = Batch();\n            processingBatch.process();\n        }\n        isProcessing = false;\n    }\n\n    function forceProcessBatch(localAsyncProcess) {\n        if (isProcessing) {\n            return;\n        }\n\n        if(localAsyncProcess === undefined) {\n            localAsyncProcess = asyncProcess;\n        }\n\n        if(asyncFrameHandler) {\n            cancelFrame(asyncFrameHandler);\n            asyncFrameHandler = null;\n        }\n\n        if(localAsyncProcess) {\n            processBatchAsync();\n        } else {\n            processBatch();\n        }\n    }\n\n    function processBatchAsync() {\n        asyncFrameHandler = requestFrame(processBatch);\n    }\n\n    function clearBatch() {\n        batch           = {};\n        batchSize       = 0;\n        topLevel        = 0;\n        bottomLevel     = 0;\n    }\n\n    function cancelFrame(listener) {\n        // var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;\n        var cancel = clearTimeout;\n        return cancel(listener);\n    }\n\n    function requestFrame(callback) {\n        // var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) { return window.setTimeout(fn, 20); };\n        var raf = function(fn) { return setTimeout(fn, 0); };\n        return raf(callback);\n    }\n\n    return {\n        add: addFunction,\n        force: forceProcessBatch\n    };\n};\n\nfunction Batch() {\n    var batch       = {};\n    var size        = 0;\n    var topLevel    = 0;\n    var bottomLevel = 0;\n\n    function add(level, fn) {\n        if(!fn) {\n            fn = level;\n            level = 0;\n        }\n\n        if(level > topLevel) {\n            topLevel = level;\n        } else if(level < bottomLevel) {\n            bottomLevel = level;\n        }\n\n        if(!batch[level]) {\n            batch[level] = [];\n        }\n\n        batch[level].push(fn);\n        size++;\n    }\n\n    function process() {\n        for(var level = bottomLevel; level <= topLevel; level++) {\n            var fns = batch[level];\n\n            for(var i = 0; i < fns.length; i++) {\n                var fn = fns[i];\n                fn();\n            }\n        }\n    }\n\n    function getSize() {\n        return size;\n    }\n\n    return {\n        add: add,\n        process: process,\n        size: getSize\n    };\n}\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../node_modules/batch-processor/src/batch-processor.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}}],"sources":{"../../../node_modules/batch-processor/src/batch-processor.js":"\"use strict\";\n\nvar utils = require(\"./utils\");\n\nmodule.exports = function batchProcessorMaker(options) {\n    options             = options || {};\n    var reporter        = options.reporter;\n    var asyncProcess    = utils.getOption(options, \"async\", true);\n    var autoProcess     = utils.getOption(options, \"auto\", true);\n\n    if(autoProcess && !asyncProcess) {\n        reporter && reporter.warn(\"Invalid options combination. auto=true and async=false is invalid. Setting async=true.\");\n        asyncProcess = true;\n    }\n\n    var batch = Batch();\n    var asyncFrameHandler;\n    var isProcessing = false;\n\n    function addFunction(level, fn) {\n        if(!isProcessing && autoProcess && asyncProcess && batch.size() === 0) {\n            // Since this is async, it is guaranteed to be executed after that the fn is added to the batch.\n            // This needs to be done before, since we're checking the size of the batch to be 0.\n            processBatchAsync();\n        }\n\n        batch.add(level, fn);\n    }\n\n    function processBatch() {\n        // Save the current batch, and create a new batch so that incoming functions are not added into the currently processing batch.\n        // Continue processing until the top-level batch is empty (functions may be added to the new batch while processing, and so on).\n        isProcessing = true;\n        while (batch.size()) {\n            var processingBatch = batch;\n            batch = Batch();\n            processingBatch.process();\n        }\n        isProcessing = false;\n    }\n\n    function forceProcessBatch(localAsyncProcess) {\n        if (isProcessing) {\n            return;\n        }\n\n        if(localAsyncProcess === undefined) {\n            localAsyncProcess = asyncProcess;\n        }\n\n        if(asyncFrameHandler) {\n            cancelFrame(asyncFrameHandler);\n            asyncFrameHandler = null;\n        }\n\n        if(localAsyncProcess) {\n            processBatchAsync();\n        } else {\n            processBatch();\n        }\n    }\n\n    function processBatchAsync() {\n        asyncFrameHandler = requestFrame(processBatch);\n    }\n\n    function clearBatch() {\n        batch           = {};\n        batchSize       = 0;\n        topLevel        = 0;\n        bottomLevel     = 0;\n    }\n\n    function cancelFrame(listener) {\n        // var cancel = window.cancelAnimationFrame || window.mozCancelAnimationFrame || window.webkitCancelAnimationFrame || window.clearTimeout;\n        var cancel = clearTimeout;\n        return cancel(listener);\n    }\n\n    function requestFrame(callback) {\n        // var raf = window.requestAnimationFrame || window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || function(fn) { return window.setTimeout(fn, 20); };\n        var raf = function(fn) { return setTimeout(fn, 0); };\n        return raf(callback);\n    }\n\n    return {\n        add: addFunction,\n        force: forceProcessBatch\n    };\n};\n\nfunction Batch() {\n    var batch       = {};\n    var size        = 0;\n    var topLevel    = 0;\n    var bottomLevel = 0;\n\n    function add(level, fn) {\n        if(!fn) {\n            fn = level;\n            level = 0;\n        }\n\n        if(level > topLevel) {\n            topLevel = level;\n        } else if(level < bottomLevel) {\n            bottomLevel = level;\n        }\n\n        if(!batch[level]) {\n            batch[level] = [];\n        }\n\n        batch[level].push(fn);\n        size++;\n    }\n\n    function process() {\n        for(var level = bottomLevel; level <= topLevel; level++) {\n            var fns = batch[level];\n\n            for(var i = 0; i < fns.length; i++) {\n                var fn = fns[i];\n                fn();\n            }\n        }\n    }\n\n    function getSize() {\n        return size;\n    }\n\n    return {\n        add: add,\n        process: process,\n        size: getSize\n    };\n}\n"},"lineCount":140}},"error":null,"hash":"f5e42f40fa0f0516e8e2e1517181f9c3","cacheData":{"env":{}}}