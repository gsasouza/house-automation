{"id":"../../../node_modules/intl-relativeformat/lib/diff.js","dependencies":[{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\intl-relativeformat\\lib\\diff.js.map","includedInParent":true,"mtime":1561012805370},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\intl-relativeformat\\src\\diff.js","includedInParent":true,"mtime":1561012805370},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\packages\\web\\package.json","includedInParent":true,"mtime":1561012880883},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\intl-relativeformat\\package.json","includedInParent":true,"mtime":1561012805370}],"generated":{"js":"\"use strict\";\n/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* jslint esnext: true */\nvar round = Math.round;\nfunction daysToYears(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    return days * 400 / 146097;\n}\n// Thanks to date-fns\n// https://github.com/date-fns/date-fns\n// MIT © Sasha Koss\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_DAY = 86400000;\nfunction startOfDay(dirtyDate) {\n    var date = new Date(dirtyDate);\n    date.setHours(0, 0, 0, 0);\n    return date;\n}\nfunction differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n    var startOfDayLeft = startOfDay(dirtyDateLeft);\n    var startOfDayRight = startOfDay(dirtyDateRight);\n    var timestampLeft = startOfDayLeft.getTime() -\n        startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE;\n    var timestampRight = startOfDayRight.getTime() -\n        startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE;\n    // Round the number of days to the nearest integer\n    // because the number of milliseconds in a day is not constant\n    // (e.g. it's different in the day of the daylight saving time clock shift)\n    return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}\nfunction default_1(from, to) {\n    // Convert to ms timestamps.\n    from = +from;\n    to = +to;\n    var millisecond = round(to - from), second = round(millisecond / 1000), minute = round(second / 60), hour = round(minute / 60);\n    // We expect a more precision in rounding when dealing with\n    // days as it feels wrong when something happended 13 hours ago and\n    // is regarded as \"yesterday\" even if the time was this morning.\n    var day = differenceInCalendarDays(to, from);\n    var week = round(day / 7);\n    var rawYears = daysToYears(day), month = round(rawYears * 12), year = round(rawYears);\n    return {\n        millisecond: millisecond,\n        second: second,\n        'second-short': second,\n        minute: minute,\n        'minute-short': minute,\n        hour: hour,\n        'hour-short': hour,\n        day: day,\n        'day-short': day,\n        week: week,\n        'week-short': week,\n        month: month,\n        'month-short': month,\n        year: year,\n        'year-short': year\n    };\n}\nexports.default = default_1;\n"},"sourceMaps":{"js":{"version":3,"file":"diff.js","sourceRoot":"","sources":["../src/diff.js"],"names":[],"mappings":";AAAA;;;;EAIE;;AAEF,yBAAyB;AAEzB,IAAI,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC;AAEvB,SAAS,WAAW,CAAC,IAAI;IACrB,mEAAmE;IACnE,OAAO,IAAI,GAAG,GAAG,GAAG,MAAM,CAAC;AAC/B,CAAC;AAED,qBAAqB;AACrB,uCAAuC;AACvC,mBAAmB;AAEnB,IAAI,sBAAsB,GAAG,KAAK,CAAC;AACnC,IAAI,mBAAmB,GAAG,QAAQ,CAAC;AAEnC,SAAS,UAAU,CAAE,SAAS;IAC1B,IAAI,IAAI,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC;IAC/B,IAAI,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC1B,OAAO,IAAI,CAAC;AAChB,CAAC;AAED,SAAS,wBAAwB,CAAE,aAAa,EAAE,cAAc;IAC5D,IAAI,cAAc,GAAG,UAAU,CAAC,aAAa,CAAC,CAAC;IAC/C,IAAI,eAAe,GAAG,UAAU,CAAC,cAAc,CAAC,CAAC;IAEjD,IAAI,aAAa,GAAG,cAAc,CAAC,OAAO,EAAE;QACxC,cAAc,CAAC,iBAAiB,EAAE,GAAG,sBAAsB,CAAC;IAChE,IAAI,cAAc,GAAG,eAAe,CAAC,OAAO,EAAE;QAC1C,eAAe,CAAC,iBAAiB,EAAE,GAAG,sBAAsB,CAAC;IAEjE,kDAAkD;IAClD,8DAA8D;IAC9D,2EAA2E;IAC3E,OAAO,IAAI,CAAC,KAAK,CAAC,CAAC,aAAa,GAAG,cAAc,CAAC,GAAG,mBAAmB,CAAC,CAAC;AAC9E,CAAC;AAED,mBAAyB,IAAI,EAAE,EAAE;IAC7B,4BAA4B;IAC5B,IAAI,GAAG,CAAC,IAAI,CAAC;IACb,EAAE,GAAK,CAAC,EAAE,CAAC;IAEX,IAAI,WAAW,GAAG,KAAK,CAAC,EAAE,GAAG,IAAI,CAAC,EAC9B,MAAM,GAAQ,KAAK,CAAC,WAAW,GAAG,IAAI,CAAC,EACvC,MAAM,GAAQ,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,EAChC,IAAI,GAAU,KAAK,CAAC,MAAM,GAAG,EAAE,CAAC,CAAC;IAEjC,2DAA2D;IAC3D,mEAAmE;IACnE,gEAAgE;IAEpE,IAAI,GAAG,GAAG,wBAAwB,CAAC,EAAE,EAAE,IAAI,CAAC,CAAC;IAC7C,IAAI,IAAI,GAAG,KAAK,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC;IAE1B,IAAI,QAAQ,GAAG,WAAW,CAAC,GAAG,CAAC,EAC3B,KAAK,GAAM,KAAK,CAAC,QAAQ,GAAG,EAAE,CAAC,EAC/B,IAAI,GAAO,KAAK,CAAC,QAAQ,CAAC,CAAC;IAE/B,OAAO;QACH,WAAW,EAAM,WAAW;QAC5B,MAAM,EAAW,MAAM;QACvB,cAAc,EAAG,MAAM;QACvB,MAAM,EAAW,MAAM;QACvB,cAAc,EAAG,MAAM;QACvB,IAAI,EAAa,IAAI;QACrB,YAAY,EAAK,IAAI;QACrB,GAAG,EAAc,GAAG;QACpB,WAAW,EAAM,GAAG;QACpB,IAAI,EAAa,IAAI;QACrB,YAAY,EAAK,IAAI;QACrB,KAAK,EAAY,KAAK;QACtB,aAAa,EAAI,KAAK;QACtB,IAAI,EAAa,IAAI;QACrB,YAAY,EAAK,IAAI;KACxB,CAAC;AACN,CAAC;AAtCD,4BAsCC","sourcesContent":["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nvar round = Math.round;\n\nfunction daysToYears(days) {\n    // 400 years have 146097 days (taking into account leap year rules)\n    return days * 400 / 146097;\n}\n\n// Thanks to date-fns\n// https://github.com/date-fns/date-fns\n// MIT © Sasha Koss\n\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_DAY = 86400000;\n\nfunction startOfDay (dirtyDate) {\n    var date = new Date(dirtyDate);\n    date.setHours(0, 0, 0, 0);\n    return date;\n}\n\nfunction differenceInCalendarDays (dirtyDateLeft, dirtyDateRight) {\n    var startOfDayLeft = startOfDay(dirtyDateLeft);\n    var startOfDayRight = startOfDay(dirtyDateRight);\n\n    var timestampLeft = startOfDayLeft.getTime() -\n        startOfDayLeft.getTimezoneOffset() * MILLISECONDS_IN_MINUTE;\n    var timestampRight = startOfDayRight.getTime() -\n        startOfDayRight.getTimezoneOffset() * MILLISECONDS_IN_MINUTE;\n\n    // Round the number of days to the nearest integer\n    // because the number of milliseconds in a day is not constant\n    // (e.g. it's different in the day of the daylight saving time clock shift)\n    return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}\n\nexport default function (from, to) {\n    // Convert to ms timestamps.\n    from = +from;\n    to   = +to;\n\n    var millisecond = round(to - from),\n        second      = round(millisecond / 1000),\n        minute      = round(second / 60),\n        hour        = round(minute / 60);\n\n        // We expect a more precision in rounding when dealing with\n        // days as it feels wrong when something happended 13 hours ago and\n        // is regarded as \"yesterday\" even if the time was this morning.\n\n    var day = differenceInCalendarDays(to, from);\n    var week = round(day / 7);\n\n    var rawYears = daysToYears(day),\n        month    = round(rawYears * 12),\n        year     = round(rawYears);\n\n    return {\n        millisecond    : millisecond,\n        second         : second,\n        'second-short' : second,\n        minute         : minute,\n        'minute-short' : minute,\n        hour           : hour,\n        'hour-short'   : hour,\n        day            : day,\n        'day-short'    : day,\n        week           : week,\n        'week-short'   : week,\n        month          : month,\n        'month-short'  : month,\n        year           : year,\n        'year-short'   : year\n    };\n}\n"]}},"error":null,"hash":"81002a6c6858d6e08861e608db76a745","cacheData":{"env":{}}}