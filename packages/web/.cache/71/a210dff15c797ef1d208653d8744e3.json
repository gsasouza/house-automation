{"id":"../../../node_modules/rxjs-async-map/out/notify.js","dependencies":[{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\rxjs-async-map\\out\\notify.js.map","includedInParent":true,"mtime":1561012227519},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\rxjs-async-map\\src\\notify.ts","includedInParent":true,"mtime":1561012227519},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\packages\\web\\package.json","includedInParent":true,"mtime":1561012880883},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\rxjs-async-map\\package.json","includedInParent":true,"mtime":1561012227519}],"generated":{"js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.notify = function (promise, observer, onReady) {\n    var notifier = {\n        notifyIfReady: function () { return false; }\n    };\n    promise.then(function (value) {\n        notifier.notifyIfReady = function () {\n            observer.next(value);\n            observer.complete();\n            return true;\n        };\n        onReady(notifier);\n    }, function (reason) {\n        notifier.notifyIfReady = function () {\n            observer.error(reason);\n            return true;\n        };\n        onReady(notifier);\n    });\n    return notifier;\n};\n"},"sourceMaps":{"js":{"version":3,"file":"notify.js","sourceRoot":"","sources":["../src/notify.ts"],"names":[],"mappings":";;AAMa,QAAA,MAAM,GAAG,UACpB,OAAuB,EACvB,QAAqB,EACrB,OAAqC;IAErC,IAAM,QAAQ,GAAG;QACf,aAAa,EAAE,cAAM,OAAA,KAAK,EAAL,CAAK;KAC3B,CAAC;IAEF,OAAO,CAAC,IAAI,CACV,UAAA,KAAK;QACH,QAAQ,CAAC,aAAa,GAAG;YACvB,QAAQ,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YACrB,QAAQ,CAAC,QAAQ,EAAE,CAAC;YAEpB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,OAAO,CAAC,QAAQ,CAAC,CAAC;IACpB,CAAC,EACD,UAAA,MAAM;QACJ,QAAQ,CAAC,aAAa,GAAG;YACvB,QAAQ,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAEvB,OAAO,IAAI,CAAC;QACd,CAAC,CAAC;QACF,OAAO,CAAC,QAAQ,CAAC,CAAC;IACpB,CAAC,CACF,CAAC;IAEF,OAAO,QAAQ,CAAC;AAClB,CAAC,CAAC","sourcesContent":["import { Observer } from 'rxjs/Observer';\n\nexport interface Notifier {\n  notifyIfReady(): boolean;\n}\n\nexport const notify = <T>(\n  promise: PromiseLike<T>,\n  observer: Observer<T>,\n  onReady: (notifier: Notifier) => void\n): Notifier => {\n  const notifier = {\n    notifyIfReady: () => false\n  };\n\n  promise.then(\n    value => {\n      notifier.notifyIfReady = () => {\n        observer.next(value);\n        observer.complete();\n\n        return true;\n      };\n      onReady(notifier);\n    },\n    reason => {\n      notifier.notifyIfReady = () => {\n        observer.error(reason);\n\n        return true;\n      };\n      onReady(notifier);\n    }\n  );\n\n  return notifier;\n};\n"]}},"error":null,"hash":"96d7b06c18fffc2e32b4cc68ae77bb0b","cacheData":{"env":{}}}