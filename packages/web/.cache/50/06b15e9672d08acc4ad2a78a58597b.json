{"id":"../../../node_modules/dataloader/index.js","dependencies":[{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\packages\\web\\package.json","includedInParent":true,"mtime":1561012880883},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\dataloader\\package.json","includedInParent":true,"mtime":1560997538093},{"name":"process","parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\dataloader\\index.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\process\\browser.js"}],"generated":{"js":"var process = require(\"process\");\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A `DataLoader` creates a public API for loading data from a particular\n * data back-end with unique keys such as the `id` column of a SQL table or\n * document name in a MongoDB database, given a batch loading function.\n *\n * Each `DataLoader` instance contains a unique memoized cache. Use caution when\n * used in long-lived applications or those which serve many users with\n * different access permissions and consider creating a new instance per\n * web request.\n */\n\n\n// Optionally turn off batching or caching or provide a cache key function or a\n// custom cache instance.\nvar DataLoader = function () {\n  function DataLoader(batchLoadFn, options) {\n    _classCallCheck(this, DataLoader);\n\n    if (typeof batchLoadFn !== 'function') {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + ('Array<key> and returns Promise<Array<value>>, but got: ' + batchLoadFn + '.'));\n    }\n    this._batchLoadFn = batchLoadFn;\n    this._options = options;\n    this._promiseCache = getValidCacheMap(options);\n    this._queue = [];\n  }\n\n  // Private\n\n\n  /**\n   * Loads a key, returning a `Promise` for the value represented by that key.\n   */\n  DataLoader.prototype.load = function load(key) {\n    var _this = this;\n\n    if (key === null || key === undefined) {\n      throw new TypeError('The loader.load() function must be called with a value,' + ('but got: ' + String(key) + '.'));\n    }\n\n    // Determine options\n    var options = this._options;\n    var shouldBatch = !options || options.batch !== false;\n    var shouldCache = !options || options.cache !== false;\n    var cacheKeyFn = options && options.cacheKeyFn;\n    var cacheKey = cacheKeyFn ? cacheKeyFn(key) : key;\n\n    // If caching and there is a cache-hit, return cached Promise.\n    if (shouldCache) {\n      var cachedPromise = this._promiseCache.get(cacheKey);\n      if (cachedPromise) {\n        return cachedPromise;\n      }\n    }\n\n    // Otherwise, produce a new Promise for this value.\n    var promise = new Promise(function (resolve, reject) {\n      // Enqueue this Promise to be dispatched.\n      _this._queue.push({ key: key, resolve: resolve, reject: reject });\n\n      // Determine if a dispatch of this queue should be scheduled.\n      // A single dispatch should be scheduled per queue at the time when the\n      // queue changes from \"empty\" to \"full\".\n      if (_this._queue.length === 1) {\n        if (shouldBatch) {\n          // If batching, schedule a task to dispatch the queue.\n          enqueuePostPromiseJob(function () {\n            return dispatchQueue(_this);\n          });\n        } else {\n          // Otherwise dispatch the (queue of one) immediately.\n          dispatchQueue(_this);\n        }\n      }\n    });\n\n    // If caching, cache this promise.\n    if (shouldCache) {\n      this._promiseCache.set(cacheKey, promise);\n    }\n\n    return promise;\n  };\n\n  /**\n   * Loads multiple keys, promising an array of values:\n   *\n   *     var [ a, b ] = await myLoader.loadMany([ 'a', 'b' ]);\n   *\n   * This is equivalent to the more verbose:\n   *\n   *     var [ a, b ] = await Promise.all([\n   *       myLoader.load('a'),\n   *       myLoader.load('b')\n   *     ]);\n   *\n   */\n\n\n  DataLoader.prototype.loadMany = function loadMany(keys) {\n    var _this2 = this;\n\n    if (!Array.isArray(keys)) {\n      throw new TypeError('The loader.loadMany() function must be called with Array<key> ' + ('but got: ' + keys + '.'));\n    }\n    return Promise.all(keys.map(function (key) {\n      return _this2.load(key);\n    }));\n  };\n\n  /**\n   * Clears the value at `key` from the cache, if it exists. Returns itself for\n   * method chaining.\n   */\n\n\n  DataLoader.prototype.clear = function clear(key) {\n    var cacheKeyFn = this._options && this._options.cacheKeyFn;\n    var cacheKey = cacheKeyFn ? cacheKeyFn(key) : key;\n    this._promiseCache.delete(cacheKey);\n    return this;\n  };\n\n  /**\n   * Clears the entire cache. To be used when some event results in unknown\n   * invalidations across this particular `DataLoader`. Returns itself for\n   * method chaining.\n   */\n\n\n  DataLoader.prototype.clearAll = function clearAll() {\n    this._promiseCache.clear();\n    return this;\n  };\n\n  /**\n   * Adds the provided key and value to the cache. If the key already\n   * exists, no change is made. Returns itself for method chaining.\n   */\n\n\n  DataLoader.prototype.prime = function prime(key, value) {\n    var cacheKeyFn = this._options && this._options.cacheKeyFn;\n    var cacheKey = cacheKeyFn ? cacheKeyFn(key) : key;\n\n    // Only add the key if it does not already exist.\n    if (this._promiseCache.get(cacheKey) === undefined) {\n      // Cache a rejected promise if the value is an Error, in order to match\n      // the behavior of load(key).\n      var promise = value instanceof Error ? Promise.reject(value) : Promise.resolve(value);\n\n      this._promiseCache.set(cacheKey, promise);\n    }\n\n    return this;\n  };\n\n  return DataLoader;\n}();\n\n// Private: Enqueue a Job to be executed after all \"PromiseJobs\" Jobs.\n//\n// ES6 JavaScript uses the concepts Job and JobQueue to schedule work to occur\n// after the current execution context has completed:\n// http://www.ecma-international.org/ecma-262/6.0/#sec-jobs-and-job-queues\n//\n// Node.js uses the `process.nextTick` mechanism to implement the concept of a\n// Job, maintaining a global FIFO JobQueue for all Jobs, which is flushed after\n// the current call stack ends.\n//\n// When calling `then` on a Promise, it enqueues a Job on a specific\n// \"PromiseJobs\" JobQueue which is flushed in Node as a single Job on the\n// global JobQueue.\n//\n// DataLoader batches all loads which occur in a single frame of execution, but\n// should include in the batch all loads which occur during the flushing of the\n// \"PromiseJobs\" JobQueue after that same execution frame.\n//\n// In order to avoid the DataLoader dispatch Job occuring before \"PromiseJobs\",\n// A Promise Job is created with the sole purpose of enqueuing a global Job,\n// ensuring that it always occurs after \"PromiseJobs\" ends.\n//\n// Node.js's job queue is unique. Browsers do not have an equivalent mechanism\n// for enqueuing a job to be performed after promise microtasks and before the\n// next macrotask. For browser environments, a macrotask is used (via\n// setImmediate or setTimeout) at a potential performance penalty.\n\n\n// If a custom cache is provided, it must be of this type (a subset of ES6 Map).\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// A Function, which when given an Array of keys, returns a Promise of an Array\n// of values or Errors.\n\n\nvar enqueuePostPromiseJob = typeof process === 'object' && typeof process.nextTick === 'function' ? function (fn) {\n  if (!resolvedPromise) {\n    resolvedPromise = Promise.resolve();\n  }\n  resolvedPromise.then(function () {\n    return process.nextTick(fn);\n  });\n} : setImmediate || setTimeout;\n\n// Private: cached resolved Promise instance\nvar resolvedPromise;\n\n// Private: given the current state of a Loader instance, perform a batch load\n// from its current queue.\nfunction dispatchQueue(loader) {\n  // Take the current loader queue, replacing it with an empty queue.\n  var queue = loader._queue;\n  loader._queue = [];\n\n  // If a maxBatchSize was provided and the queue is longer, then segment the\n  // queue into multiple batches, otherwise treat the queue as a single batch.\n  var maxBatchSize = loader._options && loader._options.maxBatchSize;\n  if (maxBatchSize && maxBatchSize > 0 && maxBatchSize < queue.length) {\n    for (var i = 0; i < queue.length / maxBatchSize; i++) {\n      dispatchQueueBatch(loader, queue.slice(i * maxBatchSize, (i + 1) * maxBatchSize));\n    }\n  } else {\n    dispatchQueueBatch(loader, queue);\n  }\n}\n\nfunction dispatchQueueBatch(loader, queue) {\n  // Collect all keys to be loaded in this dispatch\n  var keys = queue.map(function (_ref) {\n    var key = _ref.key;\n    return key;\n  });\n\n  // Call the provided batchLoadFn for this loader with the loader queue's keys.\n  var batchLoadFn = loader._batchLoadFn;\n  var batchPromise = batchLoadFn(keys);\n\n  // Assert the expected response from batchLoadFn\n  if (!batchPromise || typeof batchPromise.then !== 'function') {\n    return failedDispatch(loader, queue, new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + ('not return a Promise: ' + String(batchPromise) + '.')));\n  }\n\n  // Await the resolution of the call to batchLoadFn.\n  batchPromise.then(function (values) {\n\n    // Assert the expected resolution from batchLoadFn.\n    if (!Array.isArray(values)) {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + ('not return a Promise of an Array: ' + String(values) + '.'));\n    }\n    if (values.length !== keys.length) {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + 'not return a Promise of an Array of the same length as the Array ' + 'of keys.' + ('\\n\\nKeys:\\n' + String(keys)) + ('\\n\\nValues:\\n' + String(values)));\n    }\n\n    // Step through the values, resolving or rejecting each Promise in the\n    // loaded queue.\n    queue.forEach(function (_ref2, index) {\n      var resolve = _ref2.resolve,\n          reject = _ref2.reject;\n\n      var value = values[index];\n      if (value instanceof Error) {\n        reject(value);\n      } else {\n        resolve(value);\n      }\n    });\n  }).catch(function (error) {\n    return failedDispatch(loader, queue, error);\n  });\n}\n\n// Private: do not cache individual loads if the entire batch dispatch fails,\n// but still reject each request so they do not hang.\nfunction failedDispatch(loader, queue, error) {\n  queue.forEach(function (_ref3) {\n    var key = _ref3.key,\n        reject = _ref3.reject;\n\n    loader.clear(key);\n    reject(error);\n  });\n}\n\n// Private: given the DataLoader's options, produce a CacheMap to be used.\nfunction getValidCacheMap(options) {\n  var cacheMap = options && options.cacheMap;\n  if (!cacheMap) {\n    return new Map();\n  }\n  var cacheFunctions = ['get', 'set', 'delete', 'clear'];\n  var missingFunctions = cacheFunctions.filter(function (fnName) {\n    return cacheMap && typeof cacheMap[fnName] !== 'function';\n  });\n  if (missingFunctions.length !== 0) {\n    throw new TypeError('Custom cacheMap missing methods: ' + missingFunctions.join(', '));\n  }\n  return cacheMap;\n}\n\n// Private\n\n\nmodule.exports = DataLoader;"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/dataloader/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":182,"column":0},"generated":{"line":183,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":183,"column":0},"generated":{"line":184,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":184,"column":0},"generated":{"line":185,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":185,"column":0},"generated":{"line":186,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":186,"column":0},"generated":{"line":187,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":187,"column":0},"generated":{"line":188,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":188,"column":0},"generated":{"line":189,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":189,"column":0},"generated":{"line":190,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":190,"column":0},"generated":{"line":191,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":191,"column":0},"generated":{"line":192,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":192,"column":0},"generated":{"line":193,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":193,"column":0},"generated":{"line":194,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":194,"column":0},"generated":{"line":195,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":195,"column":0},"generated":{"line":196,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":196,"column":0},"generated":{"line":197,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":197,"column":0},"generated":{"line":198,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":198,"column":0},"generated":{"line":199,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":199,"column":0},"generated":{"line":200,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":200,"column":0},"generated":{"line":201,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":201,"column":0},"generated":{"line":202,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":202,"column":0},"generated":{"line":203,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":203,"column":0},"generated":{"line":204,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":204,"column":0},"generated":{"line":205,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":205,"column":0},"generated":{"line":206,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":206,"column":0},"generated":{"line":207,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":207,"column":0},"generated":{"line":208,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":208,"column":0},"generated":{"line":209,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":209,"column":0},"generated":{"line":210,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":210,"column":0},"generated":{"line":211,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":211,"column":0},"generated":{"line":212,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":212,"column":0},"generated":{"line":213,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":213,"column":0},"generated":{"line":214,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":214,"column":0},"generated":{"line":215,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":215,"column":0},"generated":{"line":216,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":216,"column":0},"generated":{"line":217,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":217,"column":0},"generated":{"line":218,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":218,"column":0},"generated":{"line":219,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":219,"column":0},"generated":{"line":220,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":220,"column":0},"generated":{"line":221,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":221,"column":0},"generated":{"line":222,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":222,"column":0},"generated":{"line":223,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":223,"column":0},"generated":{"line":224,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":224,"column":0},"generated":{"line":225,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":225,"column":0},"generated":{"line":226,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":226,"column":0},"generated":{"line":227,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":227,"column":0},"generated":{"line":228,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":228,"column":0},"generated":{"line":229,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":229,"column":0},"generated":{"line":230,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":230,"column":0},"generated":{"line":231,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":231,"column":0},"generated":{"line":232,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":232,"column":0},"generated":{"line":233,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":233,"column":0},"generated":{"line":234,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":234,"column":0},"generated":{"line":235,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":235,"column":0},"generated":{"line":236,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":236,"column":0},"generated":{"line":237,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":237,"column":0},"generated":{"line":238,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":238,"column":0},"generated":{"line":239,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":239,"column":0},"generated":{"line":240,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":240,"column":0},"generated":{"line":241,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":241,"column":0},"generated":{"line":242,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":242,"column":0},"generated":{"line":243,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":243,"column":0},"generated":{"line":244,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":244,"column":0},"generated":{"line":245,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":245,"column":0},"generated":{"line":246,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":246,"column":0},"generated":{"line":247,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":247,"column":0},"generated":{"line":248,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":248,"column":0},"generated":{"line":249,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":249,"column":0},"generated":{"line":250,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":250,"column":0},"generated":{"line":251,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":251,"column":0},"generated":{"line":252,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":252,"column":0},"generated":{"line":253,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":253,"column":0},"generated":{"line":254,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":254,"column":0},"generated":{"line":255,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":255,"column":0},"generated":{"line":256,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":256,"column":0},"generated":{"line":257,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":257,"column":0},"generated":{"line":258,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":258,"column":0},"generated":{"line":259,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":259,"column":0},"generated":{"line":260,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":260,"column":0},"generated":{"line":261,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":261,"column":0},"generated":{"line":262,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":262,"column":0},"generated":{"line":263,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":263,"column":0},"generated":{"line":264,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":264,"column":0},"generated":{"line":265,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":265,"column":0},"generated":{"line":266,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":266,"column":0},"generated":{"line":267,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":267,"column":0},"generated":{"line":268,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":268,"column":0},"generated":{"line":269,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":269,"column":0},"generated":{"line":270,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":270,"column":0},"generated":{"line":271,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":271,"column":0},"generated":{"line":272,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":272,"column":0},"generated":{"line":273,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":273,"column":0},"generated":{"line":274,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":274,"column":0},"generated":{"line":275,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":275,"column":0},"generated":{"line":276,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":276,"column":0},"generated":{"line":277,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":277,"column":0},"generated":{"line":278,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":278,"column":0},"generated":{"line":279,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":279,"column":0},"generated":{"line":280,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":280,"column":0},"generated":{"line":281,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":281,"column":0},"generated":{"line":282,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":282,"column":0},"generated":{"line":283,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":283,"column":0},"generated":{"line":284,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":284,"column":0},"generated":{"line":285,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":285,"column":0},"generated":{"line":286,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":286,"column":0},"generated":{"line":287,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":287,"column":0},"generated":{"line":288,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":288,"column":0},"generated":{"line":289,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":289,"column":0},"generated":{"line":290,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":290,"column":0},"generated":{"line":291,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":291,"column":0},"generated":{"line":292,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":292,"column":0},"generated":{"line":293,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":293,"column":0},"generated":{"line":294,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":294,"column":0},"generated":{"line":295,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":295,"column":0},"generated":{"line":296,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":296,"column":0},"generated":{"line":297,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":297,"column":0},"generated":{"line":298,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":298,"column":0},"generated":{"line":299,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":299,"column":0},"generated":{"line":300,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":300,"column":0},"generated":{"line":301,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":301,"column":0},"generated":{"line":302,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":302,"column":0},"generated":{"line":303,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":303,"column":0},"generated":{"line":304,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":304,"column":0},"generated":{"line":305,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":305,"column":0},"generated":{"line":306,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":306,"column":0},"generated":{"line":307,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":307,"column":0},"generated":{"line":308,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":308,"column":0},"generated":{"line":309,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":309,"column":0},"generated":{"line":310,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":310,"column":0},"generated":{"line":311,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":311,"column":0},"generated":{"line":312,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":312,"column":0},"generated":{"line":313,"column":0}},{"source":"../../../node_modules/dataloader/index.js","original":{"line":313,"column":0},"generated":{"line":314,"column":0}}],"sources":{"../../../node_modules/dataloader/index.js":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * A `DataLoader` creates a public API for loading data from a particular\n * data back-end with unique keys such as the `id` column of a SQL table or\n * document name in a MongoDB database, given a batch loading function.\n *\n * Each `DataLoader` instance contains a unique memoized cache. Use caution when\n * used in long-lived applications or those which serve many users with\n * different access permissions and consider creating a new instance per\n * web request.\n */\n\n\n// Optionally turn off batching or caching or provide a cache key function or a\n// custom cache instance.\nvar DataLoader = function () {\n  function DataLoader(batchLoadFn, options) {\n    _classCallCheck(this, DataLoader);\n\n    if (typeof batchLoadFn !== 'function') {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + ('Array<key> and returns Promise<Array<value>>, but got: ' + batchLoadFn + '.'));\n    }\n    this._batchLoadFn = batchLoadFn;\n    this._options = options;\n    this._promiseCache = getValidCacheMap(options);\n    this._queue = [];\n  }\n\n  // Private\n\n\n  /**\n   * Loads a key, returning a `Promise` for the value represented by that key.\n   */\n  DataLoader.prototype.load = function load(key) {\n    var _this = this;\n\n    if (key === null || key === undefined) {\n      throw new TypeError('The loader.load() function must be called with a value,' + ('but got: ' + String(key) + '.'));\n    }\n\n    // Determine options\n    var options = this._options;\n    var shouldBatch = !options || options.batch !== false;\n    var shouldCache = !options || options.cache !== false;\n    var cacheKeyFn = options && options.cacheKeyFn;\n    var cacheKey = cacheKeyFn ? cacheKeyFn(key) : key;\n\n    // If caching and there is a cache-hit, return cached Promise.\n    if (shouldCache) {\n      var cachedPromise = this._promiseCache.get(cacheKey);\n      if (cachedPromise) {\n        return cachedPromise;\n      }\n    }\n\n    // Otherwise, produce a new Promise for this value.\n    var promise = new Promise(function (resolve, reject) {\n      // Enqueue this Promise to be dispatched.\n      _this._queue.push({ key: key, resolve: resolve, reject: reject });\n\n      // Determine if a dispatch of this queue should be scheduled.\n      // A single dispatch should be scheduled per queue at the time when the\n      // queue changes from \"empty\" to \"full\".\n      if (_this._queue.length === 1) {\n        if (shouldBatch) {\n          // If batching, schedule a task to dispatch the queue.\n          enqueuePostPromiseJob(function () {\n            return dispatchQueue(_this);\n          });\n        } else {\n          // Otherwise dispatch the (queue of one) immediately.\n          dispatchQueue(_this);\n        }\n      }\n    });\n\n    // If caching, cache this promise.\n    if (shouldCache) {\n      this._promiseCache.set(cacheKey, promise);\n    }\n\n    return promise;\n  };\n\n  /**\n   * Loads multiple keys, promising an array of values:\n   *\n   *     var [ a, b ] = await myLoader.loadMany([ 'a', 'b' ]);\n   *\n   * This is equivalent to the more verbose:\n   *\n   *     var [ a, b ] = await Promise.all([\n   *       myLoader.load('a'),\n   *       myLoader.load('b')\n   *     ]);\n   *\n   */\n\n\n  DataLoader.prototype.loadMany = function loadMany(keys) {\n    var _this2 = this;\n\n    if (!Array.isArray(keys)) {\n      throw new TypeError('The loader.loadMany() function must be called with Array<key> ' + ('but got: ' + keys + '.'));\n    }\n    return Promise.all(keys.map(function (key) {\n      return _this2.load(key);\n    }));\n  };\n\n  /**\n   * Clears the value at `key` from the cache, if it exists. Returns itself for\n   * method chaining.\n   */\n\n\n  DataLoader.prototype.clear = function clear(key) {\n    var cacheKeyFn = this._options && this._options.cacheKeyFn;\n    var cacheKey = cacheKeyFn ? cacheKeyFn(key) : key;\n    this._promiseCache.delete(cacheKey);\n    return this;\n  };\n\n  /**\n   * Clears the entire cache. To be used when some event results in unknown\n   * invalidations across this particular `DataLoader`. Returns itself for\n   * method chaining.\n   */\n\n\n  DataLoader.prototype.clearAll = function clearAll() {\n    this._promiseCache.clear();\n    return this;\n  };\n\n  /**\n   * Adds the provided key and value to the cache. If the key already\n   * exists, no change is made. Returns itself for method chaining.\n   */\n\n\n  DataLoader.prototype.prime = function prime(key, value) {\n    var cacheKeyFn = this._options && this._options.cacheKeyFn;\n    var cacheKey = cacheKeyFn ? cacheKeyFn(key) : key;\n\n    // Only add the key if it does not already exist.\n    if (this._promiseCache.get(cacheKey) === undefined) {\n      // Cache a rejected promise if the value is an Error, in order to match\n      // the behavior of load(key).\n      var promise = value instanceof Error ? Promise.reject(value) : Promise.resolve(value);\n\n      this._promiseCache.set(cacheKey, promise);\n    }\n\n    return this;\n  };\n\n  return DataLoader;\n}();\n\n// Private: Enqueue a Job to be executed after all \"PromiseJobs\" Jobs.\n//\n// ES6 JavaScript uses the concepts Job and JobQueue to schedule work to occur\n// after the current execution context has completed:\n// http://www.ecma-international.org/ecma-262/6.0/#sec-jobs-and-job-queues\n//\n// Node.js uses the `process.nextTick` mechanism to implement the concept of a\n// Job, maintaining a global FIFO JobQueue for all Jobs, which is flushed after\n// the current call stack ends.\n//\n// When calling `then` on a Promise, it enqueues a Job on a specific\n// \"PromiseJobs\" JobQueue which is flushed in Node as a single Job on the\n// global JobQueue.\n//\n// DataLoader batches all loads which occur in a single frame of execution, but\n// should include in the batch all loads which occur during the flushing of the\n// \"PromiseJobs\" JobQueue after that same execution frame.\n//\n// In order to avoid the DataLoader dispatch Job occuring before \"PromiseJobs\",\n// A Promise Job is created with the sole purpose of enqueuing a global Job,\n// ensuring that it always occurs after \"PromiseJobs\" ends.\n//\n// Node.js's job queue is unique. Browsers do not have an equivalent mechanism\n// for enqueuing a job to be performed after promise microtasks and before the\n// next macrotask. For browser environments, a macrotask is used (via\n// setImmediate or setTimeout) at a potential performance penalty.\n\n\n// If a custom cache is provided, it must be of this type (a subset of ES6 Map).\n\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n// A Function, which when given an Array of keys, returns a Promise of an Array\n// of values or Errors.\n\n\nvar enqueuePostPromiseJob = typeof process === 'object' && typeof process.nextTick === 'function' ? function (fn) {\n  if (!resolvedPromise) {\n    resolvedPromise = Promise.resolve();\n  }\n  resolvedPromise.then(function () {\n    return process.nextTick(fn);\n  });\n} : setImmediate || setTimeout;\n\n// Private: cached resolved Promise instance\nvar resolvedPromise;\n\n// Private: given the current state of a Loader instance, perform a batch load\n// from its current queue.\nfunction dispatchQueue(loader) {\n  // Take the current loader queue, replacing it with an empty queue.\n  var queue = loader._queue;\n  loader._queue = [];\n\n  // If a maxBatchSize was provided and the queue is longer, then segment the\n  // queue into multiple batches, otherwise treat the queue as a single batch.\n  var maxBatchSize = loader._options && loader._options.maxBatchSize;\n  if (maxBatchSize && maxBatchSize > 0 && maxBatchSize < queue.length) {\n    for (var i = 0; i < queue.length / maxBatchSize; i++) {\n      dispatchQueueBatch(loader, queue.slice(i * maxBatchSize, (i + 1) * maxBatchSize));\n    }\n  } else {\n    dispatchQueueBatch(loader, queue);\n  }\n}\n\nfunction dispatchQueueBatch(loader, queue) {\n  // Collect all keys to be loaded in this dispatch\n  var keys = queue.map(function (_ref) {\n    var key = _ref.key;\n    return key;\n  });\n\n  // Call the provided batchLoadFn for this loader with the loader queue's keys.\n  var batchLoadFn = loader._batchLoadFn;\n  var batchPromise = batchLoadFn(keys);\n\n  // Assert the expected response from batchLoadFn\n  if (!batchPromise || typeof batchPromise.then !== 'function') {\n    return failedDispatch(loader, queue, new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + ('not return a Promise: ' + String(batchPromise) + '.')));\n  }\n\n  // Await the resolution of the call to batchLoadFn.\n  batchPromise.then(function (values) {\n\n    // Assert the expected resolution from batchLoadFn.\n    if (!Array.isArray(values)) {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + ('not return a Promise of an Array: ' + String(values) + '.'));\n    }\n    if (values.length !== keys.length) {\n      throw new TypeError('DataLoader must be constructed with a function which accepts ' + 'Array<key> and returns Promise<Array<value>>, but the function did ' + 'not return a Promise of an Array of the same length as the Array ' + 'of keys.' + ('\\n\\nKeys:\\n' + String(keys)) + ('\\n\\nValues:\\n' + String(values)));\n    }\n\n    // Step through the values, resolving or rejecting each Promise in the\n    // loaded queue.\n    queue.forEach(function (_ref2, index) {\n      var resolve = _ref2.resolve,\n          reject = _ref2.reject;\n\n      var value = values[index];\n      if (value instanceof Error) {\n        reject(value);\n      } else {\n        resolve(value);\n      }\n    });\n  }).catch(function (error) {\n    return failedDispatch(loader, queue, error);\n  });\n}\n\n// Private: do not cache individual loads if the entire batch dispatch fails,\n// but still reject each request so they do not hang.\nfunction failedDispatch(loader, queue, error) {\n  queue.forEach(function (_ref3) {\n    var key = _ref3.key,\n        reject = _ref3.reject;\n\n    loader.clear(key);\n    reject(error);\n  });\n}\n\n// Private: given the DataLoader's options, produce a CacheMap to be used.\nfunction getValidCacheMap(options) {\n  var cacheMap = options && options.cacheMap;\n  if (!cacheMap) {\n    return new Map();\n  }\n  var cacheFunctions = ['get', 'set', 'delete', 'clear'];\n  var missingFunctions = cacheFunctions.filter(function (fnName) {\n    return cacheMap && typeof cacheMap[fnName] !== 'function';\n  });\n  if (missingFunctions.length !== 0) {\n    throw new TypeError('Custom cacheMap missing methods: ' + missingFunctions.join(', '));\n  }\n  return cacheMap;\n}\n\n// Private\n\n\nmodule.exports = DataLoader;"},"lineCount":314}},"error":null,"hash":"67261b586b39f70089138866ca32b44a","cacheData":{"env":{}}}