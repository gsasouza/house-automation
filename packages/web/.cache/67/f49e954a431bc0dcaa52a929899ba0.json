{"id":"../../../node_modules/lru-fast/lru.js","dependencies":[{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\packages\\web\\package.json","includedInParent":true,"mtime":1561012880883},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\lru-fast\\package.json","includedInParent":true,"mtime":1561012225516}],"generated":{"js":"/**\n * A doubly linked list-based Least Recently Used (LRU) cache. Will keep most\n * recently used items while discarding least recently used items when its limit\n * is reached.\n *\n * Licensed under MIT. Copyright (c) 2010 Rasmus Andersson <http://hunch.se/>\n * See README.md for details.\n *\n * Illustration of the design:\n *\n *       entry             entry             entry             entry\n *       ______            ______            ______            ______\n *      | head |.newer => |      |.newer => |      |.newer => | tail |\n *      |  A   |          |  B   |          |  C   |          |  D   |\n *      |______| <= older.|______| <= older.|______| <= older.|______|\n *\n *  removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added\n */\nfunction LRUCache (limit) {\n  // Current size of the cache. (Read-only).\n  this.size = 0;\n  // Maximum number of items this cache can hold.\n  this.limit = limit;\n  this.oldest = this.newest = undefined;\n  this._keymap = {};\n}\n\n\nLRUCache.prototype._markEntryAsUsed = function(entry) {\n  if (entry === this.newest) {\n    // Already the most recenlty used entry, so no need to update the list\n    return;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.oldest) {\n      this.oldest = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.newest; // D. --> E\n  if (this.newest) {\n    this.newest.newer = entry; // E. <-- D\n  }\n  this.newest = entry;\n};\n\n/**\n * Put <value> into the cache associated with <key>. Returns the entry which was\n * removed to make room for the new entry. Otherwise undefined is returned\n * (i.e. if there was enough room already).\n */\nLRUCache.prototype.put = function(key, value) {\n  var entry = this._keymap[key];\n\n  if (entry) {\n    // update existing\n    entry.value = value;\n    this._markEntryAsUsed(entry);\n    return;\n  }\n\n  // new entry\n  this._keymap[key] = entry = {key:key, value:value, older:undefined, newer:undefined};\n\n  if (this.newest) {\n    // link previous tail to the new tail (entry)\n    this.newest.newer = entry;\n    entry.older = this.newest;\n  } else {\n    // we're first in -- yay\n    this.oldest = entry;\n  }\n\n  // add new entry to the end of the linked list -- it's now the freshest entry.\n  this.newest = entry;\n  this.size++;\n  if (this.size > this.limit) {\n    // we hit the limit -- remove the head\n    return this.shift();\n  }\n};\n\n/**\n * Purge the least recently used (oldest) entry from the cache. Returns the\n * removed entry or undefined if the cache was empty.\n *\n * If you need to perform any form of finalization of purged items, this is a\n * good place to do it. Simply override/replace this function:\n *\n *   var c = new LRUCache(123);\n *   c.shift = function() {\n *     var entry = LRUCache.prototype.shift.call(this);\n *     doSomethingWith(entry);\n *     return entry;\n *   }\n */\nLRUCache.prototype.shift = function() {\n  // todo: handle special case when limit == 1\n  var entry = this.oldest;\n  if (entry) {\n    if (this.oldest.newer) {\n      // advance the list\n      this.oldest = this.oldest.newer;\n      this.oldest.older = undefined;\n    } else {\n      // the cache is exhausted\n      this.oldest = undefined;\n      this.newest = undefined;\n    }\n    // Remove last strong reference to <entry> and remove links from the purged\n    // entry being returned:\n    entry.newer = entry.older = undefined;\n    // delete is slow, but we need to do this to avoid uncontrollable growth:\n    delete this._keymap[entry.key];\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value associated with <key>\n * or undefined if not in cache.\n */\nLRUCache.prototype.get = function(key, returnEntry) {\n  // First, find our cache entry\n  var entry = this._keymap[key];\n  if (entry === undefined) return; // Not cached. Sorry.\n  // As <key> was found in the cache, register it as being requested recently\n  this._markEntryAsUsed(entry);\n  return returnEntry ? entry : entry.value;\n};\n\n// ----------------------------------------------------------------------------\n// Following code is optional and can be removed without breaking the core\n// functionality.\n\n/**\n * Check if <key> is in the cache without registering recent use. Feasible if\n * you do not want to chage the state of the cache, but only \"peek\" at it.\n * Returns the entry associated with <key> if found, or undefined if not found.\n */\nLRUCache.prototype.find = function(key) {\n  return this._keymap[key];\n};\n\n/**\n * Update the value of entry with <key>. Returns the old value, or undefined if\n * entry was not in the cache.\n */\nLRUCache.prototype.set = function(key, value) {\n  var oldvalue, entry = this.get(key, true);\n  if (entry) {\n    oldvalue = entry.value;\n    entry.value = value;\n  } else {\n    oldvalue = this.put(key, value);\n    if (oldvalue) oldvalue = oldvalue.value;\n  }\n  return oldvalue;\n};\n\n/**\n * Remove entry <key> from cache and return its value. Returns undefined if not\n * found.\n */\nLRUCache.prototype.remove = function(key) {\n  var entry = this._keymap[key];\n  if (!entry) return;\n  delete this._keymap[entry.key]; // need to do delete unfortunately\n  if (entry.newer && entry.older) {\n    // relink the older entry with the newer entry\n    entry.older.newer = entry.newer;\n    entry.newer.older = entry.older;\n  } else if (entry.newer) {\n    // remove the link to us\n    entry.newer.older = undefined;\n    // link the newer entry to head\n    this.oldest = entry.newer;\n  } else if (entry.older) {\n    // remove the link to us\n    entry.older.newer = undefined;\n    // link the newer entry to head\n    this.newest = entry.older;\n  } else {// if(entry.older === undefined && entry.newer === undefined) {\n    this.oldest = this.newest = undefined;\n  }\n\n  this.size--;\n  return entry.value;\n};\n\n/** Removes all entries */\nLRUCache.prototype.removeAll = function() {\n  // This should be safe, as we never expose strong refrences to the outside\n  this.oldest = this.newest = undefined;\n  this.size = 0;\n  this._keymap = {};\n};\n\n/**\n * Return an array containing all keys of entries stored in the cache object, in\n * arbitrary order.\n */\nif (typeof Object.keys === 'function') {\n  LRUCache.prototype.keys = function() {\n    return Object.keys(this._keymap);\n  };\n} else {\n  LRUCache.prototype.keys = function() {\n    var keys = [];\n    for (var k in this._keymap) {\n      keys.push(k);\n    }\n    return keys;\n  };\n}\n\n/**\n * Call `fun` for each entry. Starting with the newest entry if `desc` is a true\n * value, otherwise starts with the oldest (head) enrty and moves towards the\n * tail.\n *\n * `fun` is called with 3 arguments in the context `context`:\n *   `fun.call(context, Object key, Object value, LRUCache self)`\n */\nLRUCache.prototype.forEach = function(fun, context, desc) {\n  var entry;\n  if (context === true) {\n    desc = true;\n    context = undefined;\n  } else if (typeof context !== 'object') {\n    context = this;\n  }\n  if (desc) {\n    entry = this.newest;\n    while (entry) {\n      fun.call(context, entry.key, entry.value, this);\n      entry = entry.older;\n    }\n  } else {\n    entry = this.oldest;\n    while (entry) {\n      fun.call(context, entry.key, entry.value, this);\n      entry = entry.newer;\n    }\n  }\n};\n\n/** Returns a JSON (array) representation */\nLRUCache.prototype.toJSON = function() {\n  var s = new Array(this.size), i = 0, entry = this.oldest;\n  while (entry) {\n    s[i++] = { key: entry.key, value: entry.value };\n    entry = entry.newer;\n  }\n  return s;\n};\n\n/** Returns a String representation */\nLRUCache.prototype.toString = function() {\n  var s = '', entry = this.oldest;\n  while (entry) {\n    s += String(entry.key)+':'+entry.value;\n    entry = entry.newer;\n    if (entry) {\n      s += ' < ';\n    }\n  }\n  return s;\n};\n\n// Export ourselves\nif (typeof this === 'object') this.LRUCache = LRUCache;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":133,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":134,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":135,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":136,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":137,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":138,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":139,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":140,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":141,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":142,"column":0},"generated":{"line":142,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":143,"column":0},"generated":{"line":143,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":144,"column":0},"generated":{"line":144,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":145,"column":0},"generated":{"line":145,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":146,"column":0},"generated":{"line":146,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":147,"column":0},"generated":{"line":147,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":148,"column":0},"generated":{"line":148,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":149,"column":0},"generated":{"line":149,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":150,"column":0},"generated":{"line":150,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":151,"column":0},"generated":{"line":151,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":152,"column":0},"generated":{"line":152,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":153,"column":0},"generated":{"line":153,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":154,"column":0},"generated":{"line":154,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":155,"column":0},"generated":{"line":155,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":156,"column":0},"generated":{"line":156,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":157,"column":0},"generated":{"line":157,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":158,"column":0},"generated":{"line":158,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":159,"column":0},"generated":{"line":159,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":160,"column":0},"generated":{"line":160,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":161,"column":0},"generated":{"line":161,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":162,"column":0},"generated":{"line":162,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":163,"column":0},"generated":{"line":163,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":164,"column":0},"generated":{"line":164,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":165,"column":0},"generated":{"line":165,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":166,"column":0},"generated":{"line":166,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":167,"column":0},"generated":{"line":167,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":168,"column":0},"generated":{"line":168,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":169,"column":0},"generated":{"line":169,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":170,"column":0},"generated":{"line":170,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":171,"column":0},"generated":{"line":171,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":172,"column":0},"generated":{"line":172,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":173,"column":0},"generated":{"line":173,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":174,"column":0},"generated":{"line":174,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":175,"column":0},"generated":{"line":175,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":176,"column":0},"generated":{"line":176,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":177,"column":0},"generated":{"line":177,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":178,"column":0},"generated":{"line":178,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":179,"column":0},"generated":{"line":179,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":180,"column":0},"generated":{"line":180,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":181,"column":0},"generated":{"line":181,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":182,"column":0},"generated":{"line":182,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":183,"column":0},"generated":{"line":183,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":184,"column":0},"generated":{"line":184,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":185,"column":0},"generated":{"line":185,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":186,"column":0},"generated":{"line":186,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":187,"column":0},"generated":{"line":187,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":188,"column":0},"generated":{"line":188,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":189,"column":0},"generated":{"line":189,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":190,"column":0},"generated":{"line":190,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":191,"column":0},"generated":{"line":191,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":192,"column":0},"generated":{"line":192,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":193,"column":0},"generated":{"line":193,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":194,"column":0},"generated":{"line":194,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":195,"column":0},"generated":{"line":195,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":196,"column":0},"generated":{"line":196,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":197,"column":0},"generated":{"line":197,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":198,"column":0},"generated":{"line":198,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":199,"column":0},"generated":{"line":199,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":200,"column":0},"generated":{"line":200,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":201,"column":0},"generated":{"line":201,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":202,"column":0},"generated":{"line":202,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":203,"column":0},"generated":{"line":203,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":204,"column":0},"generated":{"line":204,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":205,"column":0},"generated":{"line":205,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":206,"column":0},"generated":{"line":206,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":207,"column":0},"generated":{"line":207,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":208,"column":0},"generated":{"line":208,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":209,"column":0},"generated":{"line":209,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":210,"column":0},"generated":{"line":210,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":211,"column":0},"generated":{"line":211,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":212,"column":0},"generated":{"line":212,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":213,"column":0},"generated":{"line":213,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":214,"column":0},"generated":{"line":214,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":215,"column":0},"generated":{"line":215,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":216,"column":0},"generated":{"line":216,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":217,"column":0},"generated":{"line":217,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":218,"column":0},"generated":{"line":218,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":219,"column":0},"generated":{"line":219,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":220,"column":0},"generated":{"line":220,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":221,"column":0},"generated":{"line":221,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":222,"column":0},"generated":{"line":222,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":223,"column":0},"generated":{"line":223,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":224,"column":0},"generated":{"line":224,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":225,"column":0},"generated":{"line":225,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":226,"column":0},"generated":{"line":226,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":227,"column":0},"generated":{"line":227,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":228,"column":0},"generated":{"line":228,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":229,"column":0},"generated":{"line":229,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":230,"column":0},"generated":{"line":230,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":231,"column":0},"generated":{"line":231,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":232,"column":0},"generated":{"line":232,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":233,"column":0},"generated":{"line":233,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":234,"column":0},"generated":{"line":234,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":235,"column":0},"generated":{"line":235,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":236,"column":0},"generated":{"line":236,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":237,"column":0},"generated":{"line":237,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":238,"column":0},"generated":{"line":238,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":239,"column":0},"generated":{"line":239,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":240,"column":0},"generated":{"line":240,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":241,"column":0},"generated":{"line":241,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":242,"column":0},"generated":{"line":242,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":243,"column":0},"generated":{"line":243,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":244,"column":0},"generated":{"line":244,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":245,"column":0},"generated":{"line":245,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":246,"column":0},"generated":{"line":246,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":247,"column":0},"generated":{"line":247,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":248,"column":0},"generated":{"line":248,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":249,"column":0},"generated":{"line":249,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":250,"column":0},"generated":{"line":250,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":251,"column":0},"generated":{"line":251,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":252,"column":0},"generated":{"line":252,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":253,"column":0},"generated":{"line":253,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":254,"column":0},"generated":{"line":254,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":255,"column":0},"generated":{"line":255,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":256,"column":0},"generated":{"line":256,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":257,"column":0},"generated":{"line":257,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":258,"column":0},"generated":{"line":258,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":259,"column":0},"generated":{"line":259,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":260,"column":0},"generated":{"line":260,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":261,"column":0},"generated":{"line":261,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":262,"column":0},"generated":{"line":262,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":263,"column":0},"generated":{"line":263,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":264,"column":0},"generated":{"line":264,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":265,"column":0},"generated":{"line":265,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":266,"column":0},"generated":{"line":266,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":267,"column":0},"generated":{"line":267,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":268,"column":0},"generated":{"line":268,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":269,"column":0},"generated":{"line":269,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":270,"column":0},"generated":{"line":270,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":271,"column":0},"generated":{"line":271,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":272,"column":0},"generated":{"line":272,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":273,"column":0},"generated":{"line":273,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":274,"column":0},"generated":{"line":274,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":275,"column":0},"generated":{"line":275,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":276,"column":0},"generated":{"line":276,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":277,"column":0},"generated":{"line":277,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":278,"column":0},"generated":{"line":278,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":279,"column":0},"generated":{"line":279,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":280,"column":0},"generated":{"line":280,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":281,"column":0},"generated":{"line":281,"column":0}},{"source":"../../../node_modules/lru-fast/lru.js","original":{"line":282,"column":0},"generated":{"line":282,"column":0}}],"sources":{"../../../node_modules/lru-fast/lru.js":"/**\n * A doubly linked list-based Least Recently Used (LRU) cache. Will keep most\n * recently used items while discarding least recently used items when its limit\n * is reached.\n *\n * Licensed under MIT. Copyright (c) 2010 Rasmus Andersson <http://hunch.se/>\n * See README.md for details.\n *\n * Illustration of the design:\n *\n *       entry             entry             entry             entry\n *       ______            ______            ______            ______\n *      | head |.newer => |      |.newer => |      |.newer => | tail |\n *      |  A   |          |  B   |          |  C   |          |  D   |\n *      |______| <= older.|______| <= older.|______| <= older.|______|\n *\n *  removed  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  <--  added\n */\nfunction LRUCache (limit) {\n  // Current size of the cache. (Read-only).\n  this.size = 0;\n  // Maximum number of items this cache can hold.\n  this.limit = limit;\n  this.oldest = this.newest = undefined;\n  this._keymap = {};\n}\n\n\nLRUCache.prototype._markEntryAsUsed = function(entry) {\n  if (entry === this.newest) {\n    // Already the most recenlty used entry, so no need to update the list\n    return;\n  }\n  // HEAD--------------TAIL\n  //   <.older   .newer>\n  //  <--- add direction --\n  //   A  B  C  <D>  E\n  if (entry.newer) {\n    if (entry === this.oldest) {\n      this.oldest = entry.newer;\n    }\n    entry.newer.older = entry.older; // C <-- E.\n  }\n  if (entry.older) {\n    entry.older.newer = entry.newer; // C. --> E\n  }\n  entry.newer = undefined; // D --x\n  entry.older = this.newest; // D. --> E\n  if (this.newest) {\n    this.newest.newer = entry; // E. <-- D\n  }\n  this.newest = entry;\n};\n\n/**\n * Put <value> into the cache associated with <key>. Returns the entry which was\n * removed to make room for the new entry. Otherwise undefined is returned\n * (i.e. if there was enough room already).\n */\nLRUCache.prototype.put = function(key, value) {\n  var entry = this._keymap[key];\n\n  if (entry) {\n    // update existing\n    entry.value = value;\n    this._markEntryAsUsed(entry);\n    return;\n  }\n\n  // new entry\n  this._keymap[key] = entry = {key:key, value:value, older:undefined, newer:undefined};\n\n  if (this.newest) {\n    // link previous tail to the new tail (entry)\n    this.newest.newer = entry;\n    entry.older = this.newest;\n  } else {\n    // we're first in -- yay\n    this.oldest = entry;\n  }\n\n  // add new entry to the end of the linked list -- it's now the freshest entry.\n  this.newest = entry;\n  this.size++;\n  if (this.size > this.limit) {\n    // we hit the limit -- remove the head\n    return this.shift();\n  }\n};\n\n/**\n * Purge the least recently used (oldest) entry from the cache. Returns the\n * removed entry or undefined if the cache was empty.\n *\n * If you need to perform any form of finalization of purged items, this is a\n * good place to do it. Simply override/replace this function:\n *\n *   var c = new LRUCache(123);\n *   c.shift = function() {\n *     var entry = LRUCache.prototype.shift.call(this);\n *     doSomethingWith(entry);\n *     return entry;\n *   }\n */\nLRUCache.prototype.shift = function() {\n  // todo: handle special case when limit == 1\n  var entry = this.oldest;\n  if (entry) {\n    if (this.oldest.newer) {\n      // advance the list\n      this.oldest = this.oldest.newer;\n      this.oldest.older = undefined;\n    } else {\n      // the cache is exhausted\n      this.oldest = undefined;\n      this.newest = undefined;\n    }\n    // Remove last strong reference to <entry> and remove links from the purged\n    // entry being returned:\n    entry.newer = entry.older = undefined;\n    // delete is slow, but we need to do this to avoid uncontrollable growth:\n    delete this._keymap[entry.key];\n    this.size--;\n  }\n  return entry;\n};\n\n/**\n * Get and register recent use of <key>. Returns the value associated with <key>\n * or undefined if not in cache.\n */\nLRUCache.prototype.get = function(key, returnEntry) {\n  // First, find our cache entry\n  var entry = this._keymap[key];\n  if (entry === undefined) return; // Not cached. Sorry.\n  // As <key> was found in the cache, register it as being requested recently\n  this._markEntryAsUsed(entry);\n  return returnEntry ? entry : entry.value;\n};\n\n// ----------------------------------------------------------------------------\n// Following code is optional and can be removed without breaking the core\n// functionality.\n\n/**\n * Check if <key> is in the cache without registering recent use. Feasible if\n * you do not want to chage the state of the cache, but only \"peek\" at it.\n * Returns the entry associated with <key> if found, or undefined if not found.\n */\nLRUCache.prototype.find = function(key) {\n  return this._keymap[key];\n};\n\n/**\n * Update the value of entry with <key>. Returns the old value, or undefined if\n * entry was not in the cache.\n */\nLRUCache.prototype.set = function(key, value) {\n  var oldvalue, entry = this.get(key, true);\n  if (entry) {\n    oldvalue = entry.value;\n    entry.value = value;\n  } else {\n    oldvalue = this.put(key, value);\n    if (oldvalue) oldvalue = oldvalue.value;\n  }\n  return oldvalue;\n};\n\n/**\n * Remove entry <key> from cache and return its value. Returns undefined if not\n * found.\n */\nLRUCache.prototype.remove = function(key) {\n  var entry = this._keymap[key];\n  if (!entry) return;\n  delete this._keymap[entry.key]; // need to do delete unfortunately\n  if (entry.newer && entry.older) {\n    // relink the older entry with the newer entry\n    entry.older.newer = entry.newer;\n    entry.newer.older = entry.older;\n  } else if (entry.newer) {\n    // remove the link to us\n    entry.newer.older = undefined;\n    // link the newer entry to head\n    this.oldest = entry.newer;\n  } else if (entry.older) {\n    // remove the link to us\n    entry.older.newer = undefined;\n    // link the newer entry to head\n    this.newest = entry.older;\n  } else {// if(entry.older === undefined && entry.newer === undefined) {\n    this.oldest = this.newest = undefined;\n  }\n\n  this.size--;\n  return entry.value;\n};\n\n/** Removes all entries */\nLRUCache.prototype.removeAll = function() {\n  // This should be safe, as we never expose strong refrences to the outside\n  this.oldest = this.newest = undefined;\n  this.size = 0;\n  this._keymap = {};\n};\n\n/**\n * Return an array containing all keys of entries stored in the cache object, in\n * arbitrary order.\n */\nif (typeof Object.keys === 'function') {\n  LRUCache.prototype.keys = function() {\n    return Object.keys(this._keymap);\n  };\n} else {\n  LRUCache.prototype.keys = function() {\n    var keys = [];\n    for (var k in this._keymap) {\n      keys.push(k);\n    }\n    return keys;\n  };\n}\n\n/**\n * Call `fun` for each entry. Starting with the newest entry if `desc` is a true\n * value, otherwise starts with the oldest (head) enrty and moves towards the\n * tail.\n *\n * `fun` is called with 3 arguments in the context `context`:\n *   `fun.call(context, Object key, Object value, LRUCache self)`\n */\nLRUCache.prototype.forEach = function(fun, context, desc) {\n  var entry;\n  if (context === true) {\n    desc = true;\n    context = undefined;\n  } else if (typeof context !== 'object') {\n    context = this;\n  }\n  if (desc) {\n    entry = this.newest;\n    while (entry) {\n      fun.call(context, entry.key, entry.value, this);\n      entry = entry.older;\n    }\n  } else {\n    entry = this.oldest;\n    while (entry) {\n      fun.call(context, entry.key, entry.value, this);\n      entry = entry.newer;\n    }\n  }\n};\n\n/** Returns a JSON (array) representation */\nLRUCache.prototype.toJSON = function() {\n  var s = new Array(this.size), i = 0, entry = this.oldest;\n  while (entry) {\n    s[i++] = { key: entry.key, value: entry.value };\n    entry = entry.newer;\n  }\n  return s;\n};\n\n/** Returns a String representation */\nLRUCache.prototype.toString = function() {\n  var s = '', entry = this.oldest;\n  while (entry) {\n    s += String(entry.key)+':'+entry.value;\n    entry = entry.newer;\n    if (entry) {\n      s += ' < ';\n    }\n  }\n  return s;\n};\n\n// Export ourselves\nif (typeof this === 'object') this.LRUCache = LRUCache;\n"},"lineCount":282}},"error":null,"hash":"0e39de96ebd9491bdb50adbbc89c6e1a","cacheData":{"env":{}}}