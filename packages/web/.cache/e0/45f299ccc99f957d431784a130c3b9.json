{"id":"../../../node_modules/intl-relativeformat/lib/core.js","dependencies":[{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\intl-relativeformat\\lib\\core.js.map","includedInParent":true,"mtime":1561012805370},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\intl-relativeformat\\src\\core.js","includedInParent":true,"mtime":1561012805370},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\packages\\web\\package.json","includedInParent":true,"mtime":1561012880883},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\intl-relativeformat\\package.json","includedInParent":true,"mtime":1561012805370},{"name":"intl-messageformat","loc":{"line":9,"column":35},"parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\intl-relativeformat\\lib\\core.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\intl-messageformat\\index.js"},{"name":"./diff","loc":{"line":10,"column":21},"parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\intl-relativeformat\\lib\\core.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\intl-relativeformat\\lib\\diff.js"},{"name":"./es5","loc":{"line":11,"column":20},"parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\intl-relativeformat\\lib\\core.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\intl-relativeformat\\lib\\es5.js"}],"generated":{"js":"\"use strict\";\n/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/* jslint esnext: true */\nvar intl_messageformat_1 = require(\"intl-messageformat\");\nvar diff_1 = require(\"./diff\");\nvar es5_1 = require(\"./es5\");\nexports.default = RelativeFormat;\n// -----------------------------------------------------------------------------\nvar FIELDS = [\n    'second', 'second-short',\n    'minute', 'minute-short',\n    'hour', 'hour-short',\n    'day', 'day-short',\n    'month', 'month-short',\n    'year', 'year-short'\n];\nvar STYLES = ['best fit', 'numeric'];\n// -- RelativeFormat -----------------------------------------------------------\nfunction RelativeFormat(locales, options) {\n    options = options || {};\n    // Make a copy of `locales` if it's an array, so that it doesn't change\n    // since it's used lazily.\n    if (es5_1.isArray(locales)) {\n        locales = locales.concat();\n    }\n    es5_1.defineProperty(this, '_locale', { value: this._resolveLocale(locales) });\n    es5_1.defineProperty(this, '_options', { value: {\n            style: this._resolveStyle(options.style),\n            units: this._isValidUnits(options.units) && options.units\n        } });\n    es5_1.defineProperty(this, '_locales', { value: locales });\n    es5_1.defineProperty(this, '_fields', { value: this._findFields(this._locale) });\n    es5_1.defineProperty(this, '_messages', { value: es5_1.objCreate(null) });\n    // \"Bind\" `format()` method to `this` so it can be passed by reference like\n    // the other `Intl` APIs.\n    var relativeFormat = this;\n    this.format = function format(date, options) {\n        return relativeFormat._format(date, options);\n    };\n}\n// Define internal private properties for dealing with locale data.\nes5_1.defineProperty(RelativeFormat, '__localeData__', { value: es5_1.objCreate(null) });\nes5_1.defineProperty(RelativeFormat, '__addLocaleData', { value: function () {\n        for (var i = 0; i < arguments.length; i++) {\n            var datum = arguments[i];\n            if (!(datum && datum.locale)) {\n                throw new Error('Locale data provided to IntlRelativeFormat is missing a ' +\n                    '`locale` property value');\n            }\n            RelativeFormat.__localeData__[datum.locale.toLowerCase()] = datum;\n            // Add data to IntlMessageFormat.\n            intl_messageformat_1.default.__addLocaleData(datum);\n        }\n    } });\n// Define public `defaultLocale` property which can be set by the developer, or\n// it will be set when the first RelativeFormat instance is created by\n// leveraging the resolved locale from `Intl`.\nes5_1.defineProperty(RelativeFormat, 'defaultLocale', {\n    enumerable: true,\n    writable: true,\n    value: undefined\n});\n// Define public `thresholds` property which can be set by the developer, and\n// defaults to relative time thresholds from moment.js.\nes5_1.defineProperty(RelativeFormat, 'thresholds', {\n    enumerable: true,\n    value: {\n        second: 45, 'second-short': 45,\n        minute: 45, 'minute-short': 45,\n        hour: 22, 'hour-short': 22,\n        day: 26, 'day-short': 26,\n        month: 11, 'month-short': 11 // months to year\n    }\n});\nRelativeFormat.prototype.resolvedOptions = function () {\n    return {\n        locale: this._locale,\n        style: this._options.style,\n        units: this._options.units\n    };\n};\nRelativeFormat.prototype._compileMessage = function (units) {\n    // `this._locales` is the original set of locales the user specified to the\n    // constructor, while `this._locale` is the resolved root locale.\n    var locales = this._locales;\n    var resolvedLocale = this._locale;\n    var field = this._fields[units];\n    var relativeTime = field.relativeTime;\n    var future = '';\n    var past = '';\n    var i;\n    for (i in relativeTime.future) {\n        if (relativeTime.future.hasOwnProperty(i)) {\n            future += ' ' + i + ' {' +\n                relativeTime.future[i].replace('{0}', '#') + '}';\n        }\n    }\n    for (i in relativeTime.past) {\n        if (relativeTime.past.hasOwnProperty(i)) {\n            past += ' ' + i + ' {' +\n                relativeTime.past[i].replace('{0}', '#') + '}';\n        }\n    }\n    var message = '{when, select, future {{0, plural, ' + future + '}}' +\n        'past {{0, plural, ' + past + '}}}';\n    // Create the synthetic IntlMessageFormat instance using the original\n    // locales value specified by the user when constructing the the parent\n    // IntlRelativeFormat instance.\n    return new intl_messageformat_1.default(message, locales);\n};\nRelativeFormat.prototype._getMessage = function (units) {\n    var messages = this._messages;\n    // Create a new synthetic message based on the locale data from CLDR.\n    if (!messages[units]) {\n        messages[units] = this._compileMessage(units);\n    }\n    return messages[units];\n};\nRelativeFormat.prototype._getRelativeUnits = function (diff, units) {\n    var field = this._fields[units];\n    if (field.relative) {\n        return field.relative[diff];\n    }\n};\nRelativeFormat.prototype._findFields = function (locale) {\n    var localeData = RelativeFormat.__localeData__;\n    var data = localeData[locale.toLowerCase()];\n    // The locale data is de-duplicated, so we have to traverse the locale's\n    // hierarchy until we find `fields` to return.\n    while (data) {\n        if (data.fields) {\n            return data.fields;\n        }\n        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\n    }\n    throw new Error('Locale data added to IntlRelativeFormat is missing `fields` for :' +\n        locale);\n};\nRelativeFormat.prototype._format = function (date, options) {\n    var now = options && options.now !== undefined ? options.now : es5_1.dateNow();\n    if (date === undefined) {\n        date = now;\n    }\n    // Determine if the `date` and optional `now` values are valid, and throw a\n    // similar error to what `Intl.DateTimeFormat#format()` would throw.\n    if (!isFinite(now)) {\n        throw new RangeError('The `now` option provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.');\n    }\n    if (!isFinite(date)) {\n        throw new RangeError('The date value provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.');\n    }\n    var diffReport = diff_1.default(now, date);\n    var units = this._options.units || this._selectUnits(diffReport);\n    var diffInUnits = diffReport[units];\n    if (this._options.style !== 'numeric') {\n        var relativeUnits = this._getRelativeUnits(diffInUnits, units);\n        if (relativeUnits) {\n            return relativeUnits;\n        }\n    }\n    return this._getMessage(units).format({\n        '0': Math.abs(diffInUnits),\n        when: diffInUnits < 0 ? 'past' : 'future'\n    });\n};\nRelativeFormat.prototype._isValidUnits = function (units) {\n    if (!units || es5_1.arrIndexOf.call(FIELDS, units) >= 0) {\n        return true;\n    }\n    if (typeof units === 'string') {\n        var suggestion = /s$/.test(units) && units.substr(0, units.length - 1);\n        if (suggestion && es5_1.arrIndexOf.call(FIELDS, suggestion) >= 0) {\n            throw new Error('\"' + units + '\" is not a valid IntlRelativeFormat `units` ' +\n                'value, did you mean: ' + suggestion);\n        }\n    }\n    throw new Error('\"' + units + '\" is not a valid IntlRelativeFormat `units` value, it ' +\n        'must be one of: \"' + FIELDS.join('\", \"') + '\"');\n};\nRelativeFormat.prototype._resolveLocale = function (locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n    // Create a copy of the array so we can push on the default locale.\n    locales = (locales || []).concat(RelativeFormat.defaultLocale);\n    var localeData = RelativeFormat.__localeData__;\n    var i, len, localeParts, data;\n    // Using the set of locales + the default locale, we look for the first one\n    // which that has been registered. When data does not exist for a locale, we\n    // traverse its ancestors to find something that's been registered within\n    // its hierarchy of locales. Since we lack the proper `parentLocale` data\n    // here, we must take a naive approach to traversal.\n    for (i = 0, len = locales.length; i < len; i += 1) {\n        localeParts = locales[i].toLowerCase().split('-');\n        while (localeParts.length) {\n            data = localeData[localeParts.join('-')];\n            if (data) {\n                // Return the normalized locale string; e.g., we return \"en-US\",\n                // instead of \"en-us\".\n                return data.locale;\n            }\n            localeParts.pop();\n        }\n    }\n    var defaultLocale = locales.pop();\n    throw new Error('No locale data has been added to IntlRelativeFormat for: ' +\n        locales.join(', ') + ', or the default locale: ' + defaultLocale);\n};\nRelativeFormat.prototype._resolveStyle = function (style) {\n    // Default to \"best fit\" style.\n    if (!style) {\n        return STYLES[0];\n    }\n    if (es5_1.arrIndexOf.call(STYLES, style) >= 0) {\n        return style;\n    }\n    throw new Error('\"' + style + '\" is not a valid IntlRelativeFormat `style` value, it ' +\n        'must be one of: \"' + STYLES.join('\", \"') + '\"');\n};\nRelativeFormat.prototype._selectUnits = function (diffReport) {\n    var i, l, units;\n    var fields = FIELDS.filter(function (field) {\n        return field.indexOf('-short') < 1;\n    });\n    for (i = 0, l = fields.length; i < l; i += 1) {\n        units = fields[i];\n        if (Math.abs(diffReport[units]) < RelativeFormat.thresholds[units]) {\n            break;\n        }\n    }\n    return units;\n};\n"},"sourceMaps":{"js":{"version":3,"file":"core.js","sourceRoot":"","sources":["../src/core.js"],"names":[],"mappings":"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","sourcesContent":["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n/* jslint esnext: true */\n\nimport IntlMessageFormat from 'intl-messageformat';\nimport diff from './diff';\nimport {\n    defineProperty,\n    objCreate,\n    arrIndexOf,\n    isArray,\n    dateNow\n} from './es5';\n\nexport default RelativeFormat;\n\n// -----------------------------------------------------------------------------\n\nvar FIELDS = [\n    'second', 'second-short',\n    'minute', 'minute-short',\n    'hour', 'hour-short',\n    'day', 'day-short',\n    'month', 'month-short',\n    'year', 'year-short'\n];\nvar STYLES = ['best fit', 'numeric'];\n\n// -- RelativeFormat -----------------------------------------------------------\n\nfunction RelativeFormat(locales, options) {\n    options = options || {};\n\n    // Make a copy of `locales` if it's an array, so that it doesn't change\n    // since it's used lazily.\n    if (isArray(locales)) {\n        locales = locales.concat();\n    }\n\n    defineProperty(this, '_locale', {value: this._resolveLocale(locales)});\n    defineProperty(this, '_options', {value: {\n        style: this._resolveStyle(options.style),\n        units: this._isValidUnits(options.units) && options.units\n    }});\n\n    defineProperty(this, '_locales', {value: locales});\n    defineProperty(this, '_fields', {value: this._findFields(this._locale)});\n    defineProperty(this, '_messages', {value: objCreate(null)});\n\n    // \"Bind\" `format()` method to `this` so it can be passed by reference like\n    // the other `Intl` APIs.\n    var relativeFormat = this;\n    this.format = function format(date, options) {\n        return relativeFormat._format(date, options);\n    };\n}\n\n// Define internal private properties for dealing with locale data.\ndefineProperty(RelativeFormat, '__localeData__', {value: objCreate(null)});\ndefineProperty(RelativeFormat, '__addLocaleData', {value: function () {\n    for (var i = 0; i < arguments.length; i++) {\n        var datum = arguments[i]\n        if (!(datum && datum.locale)) {\n            throw new Error(\n                'Locale data provided to IntlRelativeFormat is missing a ' +\n                '`locale` property value'\n            );\n        }\n    \n        RelativeFormat.__localeData__[datum.locale.toLowerCase()] = datum;\n    \n        // Add data to IntlMessageFormat.\n        IntlMessageFormat.__addLocaleData(datum);\n    }\n}});\n\n// Define public `defaultLocale` property which can be set by the developer, or\n// it will be set when the first RelativeFormat instance is created by\n// leveraging the resolved locale from `Intl`.\ndefineProperty(RelativeFormat, 'defaultLocale', {\n    enumerable: true,\n    writable  : true,\n    value     : undefined\n});\n\n// Define public `thresholds` property which can be set by the developer, and\n// defaults to relative time thresholds from moment.js.\ndefineProperty(RelativeFormat, 'thresholds', {\n    enumerable: true,\n\n    value: {\n        second: 45, 'second-short': 45,  // seconds to minute\n        minute: 45, 'minute-short': 45, // minutes to hour\n        hour  : 22, 'hour-short': 22, // hours to day\n        day   : 26, 'day-short': 26, // days to month\n        month : 11, 'month-short': 11 // months to year\n    }\n});\n\nRelativeFormat.prototype.resolvedOptions = function () {\n    return {\n        locale: this._locale,\n        style : this._options.style,\n        units : this._options.units\n    };\n};\n\nRelativeFormat.prototype._compileMessage = function (units) {\n    // `this._locales` is the original set of locales the user specified to the\n    // constructor, while `this._locale` is the resolved root locale.\n    var locales        = this._locales;\n    var resolvedLocale = this._locale;\n\n    var field        = this._fields[units];\n    var relativeTime = field.relativeTime;\n    var future       = '';\n    var past         = '';\n    var i;\n\n    for (i in relativeTime.future) {\n        if (relativeTime.future.hasOwnProperty(i)) {\n            future += ' ' + i + ' {' +\n                relativeTime.future[i].replace('{0}', '#') + '}';\n        }\n    }\n\n    for (i in relativeTime.past) {\n        if (relativeTime.past.hasOwnProperty(i)) {\n            past += ' ' + i + ' {' +\n                relativeTime.past[i].replace('{0}', '#') + '}';\n        }\n    }\n\n    var message = '{when, select, future {{0, plural, ' + future + '}}' +\n                                 'past {{0, plural, ' + past + '}}}';\n\n    // Create the synthetic IntlMessageFormat instance using the original\n    // locales value specified by the user when constructing the the parent\n    // IntlRelativeFormat instance.\n    return new IntlMessageFormat(message, locales);\n};\n\nRelativeFormat.prototype._getMessage = function (units) {\n    var messages = this._messages;\n\n    // Create a new synthetic message based on the locale data from CLDR.\n    if (!messages[units]) {\n        messages[units] = this._compileMessage(units);\n    }\n\n    return messages[units];\n};\n\nRelativeFormat.prototype._getRelativeUnits = function (diff, units) {\n    var field = this._fields[units];\n\n    if (field.relative) {\n        return field.relative[diff];\n    }\n};\n\nRelativeFormat.prototype._findFields = function (locale) {\n    var localeData = RelativeFormat.__localeData__;\n    var data       = localeData[locale.toLowerCase()];\n\n    // The locale data is de-duplicated, so we have to traverse the locale's\n    // hierarchy until we find `fields` to return.\n    while (data) {\n        if (data.fields) {\n            return data.fields;\n        }\n\n        data = data.parentLocale && localeData[data.parentLocale.toLowerCase()];\n    }\n\n    throw new Error(\n        'Locale data added to IntlRelativeFormat is missing `fields` for :' +\n        locale\n    );\n};\n\nRelativeFormat.prototype._format = function (date, options) {\n    var now = options && options.now !== undefined ? options.now : dateNow();\n\n    if (date === undefined) {\n        date = now;\n    }\n\n    // Determine if the `date` and optional `now` values are valid, and throw a\n    // similar error to what `Intl.DateTimeFormat#format()` would throw.\n    if (!isFinite(now)) {\n        throw new RangeError(\n            'The `now` option provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.'\n        );\n    }\n\n    if (!isFinite(date)) {\n        throw new RangeError(\n            'The date value provided to IntlRelativeFormat#format() is not ' +\n            'in valid range.'\n        );\n    }\n\n    var diffReport  = diff(now, date);\n    var units       = this._options.units || this._selectUnits(diffReport);\n    var diffInUnits = diffReport[units];\n\n    if (this._options.style !== 'numeric') {\n        var relativeUnits = this._getRelativeUnits(diffInUnits, units);\n        if (relativeUnits) {\n            return relativeUnits;\n        }\n    }\n\n    return this._getMessage(units).format({\n        '0' : Math.abs(diffInUnits),\n        when: diffInUnits < 0 ? 'past' : 'future'\n    });\n};\n\nRelativeFormat.prototype._isValidUnits = function (units) {\n    if (!units || arrIndexOf.call(FIELDS, units) >= 0) {\n        return true;\n    }\n\n    if (typeof units === 'string') {\n        var suggestion = /s$/.test(units) && units.substr(0, units.length - 1);\n        if (suggestion && arrIndexOf.call(FIELDS, suggestion) >= 0) {\n            throw new Error(\n                '\"' + units + '\" is not a valid IntlRelativeFormat `units` ' +\n                'value, did you mean: ' + suggestion\n            );\n        }\n    }\n\n    throw new Error(\n        '\"' + units + '\" is not a valid IntlRelativeFormat `units` value, it ' +\n        'must be one of: \"' + FIELDS.join('\", \"') + '\"'\n    );\n};\n\nRelativeFormat.prototype._resolveLocale = function (locales) {\n    if (typeof locales === 'string') {\n        locales = [locales];\n    }\n\n    // Create a copy of the array so we can push on the default locale.\n    locales = (locales || []).concat(RelativeFormat.defaultLocale);\n\n    var localeData = RelativeFormat.__localeData__;\n    var i, len, localeParts, data;\n\n    // Using the set of locales + the default locale, we look for the first one\n    // which that has been registered. When data does not exist for a locale, we\n    // traverse its ancestors to find something that's been registered within\n    // its hierarchy of locales. Since we lack the proper `parentLocale` data\n    // here, we must take a naive approach to traversal.\n    for (i = 0, len = locales.length; i < len; i += 1) {\n        localeParts = locales[i].toLowerCase().split('-');\n\n        while (localeParts.length) {\n            data = localeData[localeParts.join('-')];\n            if (data) {\n                // Return the normalized locale string; e.g., we return \"en-US\",\n                // instead of \"en-us\".\n                return data.locale;\n            }\n\n            localeParts.pop();\n        }\n    }\n\n    var defaultLocale = locales.pop();\n    throw new Error(\n        'No locale data has been added to IntlRelativeFormat for: ' +\n        locales.join(', ') + ', or the default locale: ' + defaultLocale\n    );\n};\n\nRelativeFormat.prototype._resolveStyle = function (style) {\n    // Default to \"best fit\" style.\n    if (!style) {\n        return STYLES[0];\n    }\n\n    if (arrIndexOf.call(STYLES, style) >= 0) {\n        return style;\n    }\n\n    throw new Error(\n        '\"' + style + '\" is not a valid IntlRelativeFormat `style` value, it ' +\n        'must be one of: \"' + STYLES.join('\", \"') + '\"'\n    );\n};\n\nRelativeFormat.prototype._selectUnits = function (diffReport) {\n    var i, l, units;\n    var fields = FIELDS.filter(function(field) {\n        return field.indexOf('-short') < 1;\n    });\n\n    for (i = 0, l = fields.length; i < l; i += 1) {\n        units = fields[i];\n\n        if (Math.abs(diffReport[units]) < RelativeFormat.thresholds[units]) {\n            break;\n        }\n    }\n\n    return units;\n};\n"]}},"error":null,"hash":"7a04637de33d90b7ef75e23ff9ec5dce","cacheData":{"env":{}}}