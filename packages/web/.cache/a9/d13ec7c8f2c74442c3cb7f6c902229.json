{"id":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","dependencies":[{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\packages\\web\\package.json","includedInParent":true,"mtime":1561012880883},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\blueimp-load-image\\package.json","includedInParent":true,"mtime":1561012225894},{"name":"./load-image","loc":{"line":21,"column":20},"parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\blueimp-load-image\\js\\load-image-iptc.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\blueimp-load-image\\js\\load-image.js"},{"name":"./load-image-meta","loc":{"line":21,"column":45},"parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\blueimp-load-image\\js\\load-image-iptc.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\blueimp-load-image\\js\\load-image-meta.js"}],"generated":{"js":"var define;\n/*\n * JavaScript Load Image IPTC Parser\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2013, Sebastian Tschan\n * Copyright 2018, Dave Bevan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image', './load-image-meta'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'), require('./load-image-meta'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  loadImage.IptcMap = function () {\n    return this\n  }\n\n  loadImage.IptcMap.prototype.map = {\n    ObjectName: 0x5\n  }\n\n  loadImage.IptcMap.prototype.get = function (id) {\n    return this[id] || this[this.map[id]]\n  }\n\n  loadImage.parseIptcTags = function (\n    dataView,\n    startOffset,\n    sectionLength,\n    data\n  ) {\n    function getStringFromDB (buffer, start, length) {\n      var outstr = ''\n      for (var n = start; n < start + length; n++) {\n        outstr += String.fromCharCode(buffer.getUint8(n))\n      }\n      return outstr\n    }\n    var fieldValue, dataSize, segmentType\n    var segmentStartPos = startOffset\n    while (segmentStartPos < startOffset + sectionLength) {\n      // we currently handle the 2: class of iptc tag\n      if (\n        dataView.getUint8(segmentStartPos) === 0x1c &&\n        dataView.getUint8(segmentStartPos + 1) === 0x02\n      ) {\n        segmentType = dataView.getUint8(segmentStartPos + 2)\n        // only store data for known tags\n        if (segmentType in data.iptc.tags) {\n          dataSize = dataView.getInt16(segmentStartPos + 3)\n          fieldValue = getStringFromDB(dataView, segmentStartPos + 5, dataSize)\n          // Check if we already stored a value with this name\n          if (data.iptc.hasOwnProperty(segmentType)) {\n            // Value already stored with this name, create multivalue field\n            if (data.iptc[segmentType] instanceof Array) {\n              data.iptc[segmentType].push(fieldValue)\n            } else {\n              data.iptc[segmentType] = [data.iptc[segmentType], fieldValue]\n            }\n          } else {\n            data.iptc[segmentType] = fieldValue\n          }\n        }\n      }\n      segmentStartPos++\n    }\n  }\n\n  loadImage.parseIptcData = function (dataView, offset, length, data, options) {\n    if (options.disableIptc) {\n      return\n    }\n    var markerLength = offset + length\n    // Found '8BIM<EOT><EOT>' ?\n    var isFieldSegmentStart = function (dataView, offset) {\n      return (\n        dataView.getUint32(offset) === 0x3842494d &&\n        dataView.getUint16(offset + 4) === 0x0404\n      )\n    }\n    // Hunt forward, looking for the correct IPTC block signature:\n    // Reference: https://metacpan.org/pod/distribution/Image-MetaData-JPEG/lib/Image/MetaData/JPEG/Structures.pod#Structure-of-a-Photoshop-style-APP13-segment\n    // From https://github.com/exif-js/exif-js/blob/master/exif.js ~ line 474 on\n    while (offset + 8 < markerLength) {\n      if (isFieldSegmentStart(dataView, offset)) {\n        var nameHeaderLength = dataView.getUint8(offset + 7)\n        if (nameHeaderLength % 2 !== 0) nameHeaderLength += 1\n        // Check for pre photoshop 6 format\n        if (nameHeaderLength === 0) {\n          // Always 4\n          nameHeaderLength = 4\n        }\n        var startOffset = offset + 8 + nameHeaderLength\n        if (startOffset > markerLength) {\n          console.log('Invalid IPTC data: Invalid segment offset.')\n          break\n        }\n        var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength)\n        if (offset + sectionLength > markerLength) {\n          console.log('Invalid IPTC data: Invalid segment size.')\n          break\n        }\n        // Create the iptc object to store the tags:\n        data.iptc = new loadImage.IptcMap()\n        // Parse the tags\n        return loadImage.parseIptcTags(\n          dataView,\n          startOffset,\n          sectionLength,\n          data\n        )\n      }\n      offset++\n    }\n    console.log('No IPTC data at this offset - could be XMP')\n  }\n\n  // Registers this IPTC parser for the APP13 JPEG meta data segment:\n  loadImage.metaDataParsers.jpeg[0xffed].push(loadImage.parseIptcData)\n\n  // Adds the following properties to the parseMetaData callback data:\n  // * iptc: The iptc tags, parsed by the parseIptcData method\n\n  // Adds the following options to the parseMetaData method:\n  // * disableIptc: Disables IPTC parsing.\n})\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-iptc.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}}],"sources":{"../../../node_modules/blueimp-load-image/js/load-image-iptc.js":"/*\n * JavaScript Load Image IPTC Parser\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2013, Sebastian Tschan\n * Copyright 2018, Dave Bevan\n * https://blueimp.net\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image', './load-image-meta'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'), require('./load-image-meta'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  loadImage.IptcMap = function () {\n    return this\n  }\n\n  loadImage.IptcMap.prototype.map = {\n    ObjectName: 0x5\n  }\n\n  loadImage.IptcMap.prototype.get = function (id) {\n    return this[id] || this[this.map[id]]\n  }\n\n  loadImage.parseIptcTags = function (\n    dataView,\n    startOffset,\n    sectionLength,\n    data\n  ) {\n    function getStringFromDB (buffer, start, length) {\n      var outstr = ''\n      for (var n = start; n < start + length; n++) {\n        outstr += String.fromCharCode(buffer.getUint8(n))\n      }\n      return outstr\n    }\n    var fieldValue, dataSize, segmentType\n    var segmentStartPos = startOffset\n    while (segmentStartPos < startOffset + sectionLength) {\n      // we currently handle the 2: class of iptc tag\n      if (\n        dataView.getUint8(segmentStartPos) === 0x1c &&\n        dataView.getUint8(segmentStartPos + 1) === 0x02\n      ) {\n        segmentType = dataView.getUint8(segmentStartPos + 2)\n        // only store data for known tags\n        if (segmentType in data.iptc.tags) {\n          dataSize = dataView.getInt16(segmentStartPos + 3)\n          fieldValue = getStringFromDB(dataView, segmentStartPos + 5, dataSize)\n          // Check if we already stored a value with this name\n          if (data.iptc.hasOwnProperty(segmentType)) {\n            // Value already stored with this name, create multivalue field\n            if (data.iptc[segmentType] instanceof Array) {\n              data.iptc[segmentType].push(fieldValue)\n            } else {\n              data.iptc[segmentType] = [data.iptc[segmentType], fieldValue]\n            }\n          } else {\n            data.iptc[segmentType] = fieldValue\n          }\n        }\n      }\n      segmentStartPos++\n    }\n  }\n\n  loadImage.parseIptcData = function (dataView, offset, length, data, options) {\n    if (options.disableIptc) {\n      return\n    }\n    var markerLength = offset + length\n    // Found '8BIM<EOT><EOT>' ?\n    var isFieldSegmentStart = function (dataView, offset) {\n      return (\n        dataView.getUint32(offset) === 0x3842494d &&\n        dataView.getUint16(offset + 4) === 0x0404\n      )\n    }\n    // Hunt forward, looking for the correct IPTC block signature:\n    // Reference: https://metacpan.org/pod/distribution/Image-MetaData-JPEG/lib/Image/MetaData/JPEG/Structures.pod#Structure-of-a-Photoshop-style-APP13-segment\n    // From https://github.com/exif-js/exif-js/blob/master/exif.js ~ line 474 on\n    while (offset + 8 < markerLength) {\n      if (isFieldSegmentStart(dataView, offset)) {\n        var nameHeaderLength = dataView.getUint8(offset + 7)\n        if (nameHeaderLength % 2 !== 0) nameHeaderLength += 1\n        // Check for pre photoshop 6 format\n        if (nameHeaderLength === 0) {\n          // Always 4\n          nameHeaderLength = 4\n        }\n        var startOffset = offset + 8 + nameHeaderLength\n        if (startOffset > markerLength) {\n          console.log('Invalid IPTC data: Invalid segment offset.')\n          break\n        }\n        var sectionLength = dataView.getUint16(offset + 6 + nameHeaderLength)\n        if (offset + sectionLength > markerLength) {\n          console.log('Invalid IPTC data: Invalid segment size.')\n          break\n        }\n        // Create the iptc object to store the tags:\n        data.iptc = new loadImage.IptcMap()\n        // Parse the tags\n        return loadImage.parseIptcTags(\n          dataView,\n          startOffset,\n          sectionLength,\n          data\n        )\n      }\n      offset++\n    }\n    console.log('No IPTC data at this offset - could be XMP')\n  }\n\n  // Registers this IPTC parser for the APP13 JPEG meta data segment:\n  loadImage.metaDataParsers.jpeg[0xffed].push(loadImage.parseIptcData)\n\n  // Adds the following properties to the parseMetaData callback data:\n  // * iptc: The iptc tags, parsed by the parseIptcData method\n\n  // Adds the following options to the parseMetaData method:\n  // * disableIptc: Disables IPTC parsing.\n})\n"},"lineCount":143}},"error":null,"hash":"71fc8540dbfa8ec4ebe7da12663d3117","cacheData":{"env":{}}}