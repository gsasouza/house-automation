{"id":"../../../node_modules/uuid-validate/index.js","dependencies":[{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\packages\\web\\package.json","includedInParent":true,"mtime":1561012880883},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\uuid-validate\\package.json","includedInParent":true,"mtime":1561012225586},{"name":"buffer","parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\uuid-validate\\index.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\buffer\\index.js"}],"generated":{"js":"var Buffer = require(\"buffer\").Buffer;\n// Regular expression used for basic parsing of the uuid.\nvar pattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\n/**\n * Unparses a UUID buffer to a string. From node-uuid:\n * https://github.com/defunctzombie/node-uuid/blob/master/uuid.js\n *\n * Copyright (c) 2010-2012 Robert Kieffer\n * MIT License - http://opensource.org/licenses/mit-license.php\n *\n * @param  {Buffer} buf\n * @param  {Number=0} offset\n * @return {String}\n */\nvar _byteToHex = [];\nfor (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n/**\n * Determines whether the uuid is valid, converting\n * it from a buffer if necessary.\n *\n * @param  {String|Buffer}  uuid\n * @param  {Number=}  version\n * @return {Boolean}\n */\nmodule.exports = function (uuid, version) {\n    var parsedUuid;\n    // If the uuid is a biffer, parse it...\n    if (Buffer.isBuffer(uuid)) {\n        parsedUuid = unparse(uuid);\n    }\n    // If it's a string, it's already good.\n    else if (Object.prototype.toString.call(uuid) === '[object String]') {\n        parsedUuid = uuid;\n    }\n    // Otherwise, it's not valid.\n    else {\n        return false;\n    }\n\n    parsedUuid = parsedUuid.toLowerCase();\n\n    // All UUIDs fit a basic schema. Match that.\n    if (!pattern.test(parsedUuid)) {\n        return false;\n    }\n\n    // Now extract the version...\n    if (version === undefined) {\n        version = extractVersion(parsedUuid);\n    } else if (extractVersion(parsedUuid) !== version) {\n        return false;\n    }\n\n    switch (version) {\n        // For certain versions, the checks we did up to this point are fine.\n        case 1:\n        case 2:\n            return true;\n\n        // For versions 3 and 4, they must specify a variant.\n        case 3:\n        case 4:\n        case 5:\n            return ['8', '9', 'a', 'b'].indexOf(parsedUuid.charAt(19)) !== -1;\n\n        default:\n            // We should only be able to reach this if the consumer explicitly\n            // provided an invalid version. Prior to extractVersion we check\n            // that it's 1-4 in the regex.\n            throw new Error('Invalid version provided.');\n    }\n};\n\n/**\n * Extracts the version from the UUID, which is (by definition) the M in\n * xxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n *\n * @param  {String} uuid\n * @return {Number}\n */\nvar extractVersion = module.exports.version = function (uuid) {\n    return uuid.charAt(14)|0;\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/uuid-validate/index.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}}],"sources":{"../../../node_modules/uuid-validate/index.js":"// Regular expression used for basic parsing of the uuid.\nvar pattern = /^[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[0-9a-f]{4}-[0-9a-f]{12}$/i;\n\n/**\n * Unparses a UUID buffer to a string. From node-uuid:\n * https://github.com/defunctzombie/node-uuid/blob/master/uuid.js\n *\n * Copyright (c) 2010-2012 Robert Kieffer\n * MIT License - http://opensource.org/licenses/mit-license.php\n *\n * @param  {Buffer} buf\n * @param  {Number=0} offset\n * @return {String}\n */\nvar _byteToHex = [];\nfor (var i = 0; i < 256; i++) {\n    _byteToHex[i] = (i + 0x100).toString(16).substr(1);\n}\n\nfunction unparse(buf, offset) {\n  var i = offset || 0, bth = _byteToHex;\n  return  bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] + '-' +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]] +\n          bth[buf[i++]] + bth[buf[i++]];\n}\n\n/**\n * Determines whether the uuid is valid, converting\n * it from a buffer if necessary.\n *\n * @param  {String|Buffer}  uuid\n * @param  {Number=}  version\n * @return {Boolean}\n */\nmodule.exports = function (uuid, version) {\n    var parsedUuid;\n    // If the uuid is a biffer, parse it...\n    if (Buffer.isBuffer(uuid)) {\n        parsedUuid = unparse(uuid);\n    }\n    // If it's a string, it's already good.\n    else if (Object.prototype.toString.call(uuid) === '[object String]') {\n        parsedUuid = uuid;\n    }\n    // Otherwise, it's not valid.\n    else {\n        return false;\n    }\n\n    parsedUuid = parsedUuid.toLowerCase();\n\n    // All UUIDs fit a basic schema. Match that.\n    if (!pattern.test(parsedUuid)) {\n        return false;\n    }\n\n    // Now extract the version...\n    if (version === undefined) {\n        version = extractVersion(parsedUuid);\n    } else if (extractVersion(parsedUuid) !== version) {\n        return false;\n    }\n\n    switch (version) {\n        // For certain versions, the checks we did up to this point are fine.\n        case 1:\n        case 2:\n            return true;\n\n        // For versions 3 and 4, they must specify a variant.\n        case 3:\n        case 4:\n        case 5:\n            return ['8', '9', 'a', 'b'].indexOf(parsedUuid.charAt(19)) !== -1;\n\n        default:\n            // We should only be able to reach this if the consumer explicitly\n            // provided an invalid version. Prior to extractVersion we check\n            // that it's 1-4 in the regex.\n            throw new Error('Invalid version provided.');\n    }\n};\n\n/**\n * Extracts the version from the UUID, which is (by definition) the M in\n * xxxxxxxx-xxxx-Mxxx-Nxxx-xxxxxxxxxxxx\n *\n * @param  {String} uuid\n * @return {Number}\n */\nvar extractVersion = module.exports.version = function (uuid) {\n    return uuid.charAt(14)|0;\n};\n"},"lineCount":100}},"error":null,"hash":"4ffa9e313b33d2334a42f585383c17a0","cacheData":{"env":{}}}