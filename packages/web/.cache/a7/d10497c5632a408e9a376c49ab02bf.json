{"id":"../../../node_modules/@atlaskit/media-client/models/media.js","dependencies":[{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\@atlaskit\\media-client\\models\\media.js.map","includedInParent":true,"mtime":1561012225426},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\@atlaskit\\media-client\\src\\models\\media.ts","includedInParent":true,"mtime":1561012225426},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\packages\\web\\package.json","includedInParent":true,"mtime":1561012880883},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\@atlaskit\\media-client\\package.json","includedInParent":true,"mtime":1561012225426}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.isPreviewableType = void 0;\n\nvar isPreviewableType = function (type) {\n  return ['audio', 'video', 'image'].indexOf(type) > -1;\n};\n\nexports.isPreviewableType = isPreviewableType;"},"sourceMaps":{"js":{"mappings":[{"source":"../src/models/media.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":8,"column":0}},{"source":"../src/models/media.ts","name":null,"original":{"line":11,"column":13},"generated":{"line":8,"column":4}},{"source":"../src/models/media.ts","name":null,"original":{"line":11,"column":30},"generated":{"line":8,"column":21}},{"source":"../src/models/media.ts","name":null,"original":{"line":11,"column":33},"generated":{"line":8,"column":24}},{"source":"../src/models/media.ts","name":null,"original":{"line":11,"column":34},"generated":{"line":8,"column":34}},{"source":"../src/models/media.ts","name":null,"original":{"line":11,"column":33},"generated":{"line":8,"column":38}},{"source":"../src/models/media.ts","name":null,"original":{"line":11,"column":49},"generated":{"line":8,"column":40}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":9,"column":0}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":9,"column":9}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":10},"generated":{"line":9,"column":10}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":9,"column":17}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":19},"generated":{"line":9,"column":19}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":9,"column":26}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":28},"generated":{"line":9,"column":28}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":9,"column":35}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":37},"generated":{"line":9,"column":37}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":9,"column":44}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":45},"generated":{"line":9,"column":45}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":9},"generated":{"line":9,"column":49}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":53},"generated":{"line":9,"column":53}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":54},"generated":{"line":9,"column":54}},{"source":"../src/models/media.ts","name":null,"original":{"line":12,"column":2},"generated":{"line":9,"column":55}},{"source":"../src/models/media.ts","name":null,"original":{"line":13,"column":1},"generated":{"line":10,"column":0}},{"source":"../src/models/media.ts","name":null,"original":{"line":11,"column":7},"generated":{"line":10,"column":1}}],"sources":{"../src/models/media.ts":"import { MediaFileArtifacts } from './artifacts';\n\n// Warning! You can't add new media file processing status!\n// See packages/media/media-core/src/__tests__/cache-backward-compatibility.spec.ts\nexport type MediaFileProcessingStatus = 'pending' | 'succeeded' | 'failed';\n\n// Warning! You can't add new media types!\n// See packages/media/media-core/src/__tests__/cache-backward-compatibility.spec.ts\nexport type MediaType = 'doc' | 'audio' | 'video' | 'image' | 'unknown';\n\nexport const isPreviewableType = (type: MediaType): boolean => {\n  return ['audio', 'video', 'image'].indexOf(type) > -1;\n};\nexport type MediaFile = {\n  readonly id: string;\n  readonly mediaType: MediaType;\n  readonly mimeType: string;\n  readonly name: string;\n  readonly processingStatus?: MediaFileProcessingStatus;\n  readonly size: number;\n  readonly artifacts: MediaFileArtifacts;\n  readonly representations: MediaRepresentations;\n};\n\nexport type MediaCollection = {\n  readonly name: string;\n  readonly createdAt: number;\n};\n\nexport type MediaCollectionItems = {\n  readonly contents: MediaCollectionItem[];\n  readonly nextInclusiveStartKey?: string;\n};\n\nexport type MediaCollectionItem = {\n  readonly id: string;\n  readonly insertedAt: number;\n  readonly occurrenceKey: string;\n  readonly details: MediaCollectionItemDetails;\n};\n\nexport type MediaCollectionItemMinimalDetails = {\n  readonly name: string;\n  readonly size: number;\n};\n\nexport type MediaCollectionItemFullDetails = {\n  readonly mediaType: MediaType;\n  readonly mimeType: string;\n  readonly name: string;\n  readonly processingStatus: MediaFileProcessingStatus;\n  readonly size: number;\n  readonly artifacts: MediaFileArtifacts;\n  readonly representations: MediaRepresentations;\n};\n\nexport type MediaRepresentations = {\n  image?: Object;\n};\n\nexport type MediaCollectionItemDetails =\n  | MediaCollectionItemMinimalDetails\n  | MediaCollectionItemFullDetails;\n\nexport type MediaUpload = {\n  readonly id: string;\n  readonly created: number;\n  readonly expires: number;\n};\n\nexport type MediaChunksProbe = {\n  readonly results: {\n    readonly [etag: string]: {\n      readonly exists: boolean;\n    };\n  };\n};\n"},"lineCount":null}},"error":null,"hash":"bf680782493c276608b006edf5859cd3","cacheData":{"env":{}}}