{"id":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","dependencies":[{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\packages\\web\\package.json","includedInParent":true,"mtime":1561054270676},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\carbon-components-react\\package.json","includedInParent":true,"mtime":1561054223760},{"name":"prop-types","loc":{"line":7,"column":22},"parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\carbon-components-react\\es\\components\\MultiSelect\\MultiSelectPropTypes.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\prop-types\\index.js"}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.sortingPropTypes = void 0;\n\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nvar sortingPropTypes = {\n  /**\n   * Provide a compare function that is used to determine the ordering of\n   * options. `compareItems` has the following function signature:\n   *\n   * compareFunction :\n   *  (itemA: string, itemB: string, { locale: string }) => number\n   */\n  compareItems: _propTypes.default.func.isRequired,\n\n  /**\n   * Provide a method that sorts all options in the control. Overriding this\n   * prop means that you also have to handle the sort logic for selected versus\n   * un-selected items. If you just want to control ordering, consider the\n   * `compareItems` prop instead.\n   *\n   * `sortItems` has the following signature:\n   *\n   * sortItems :\n   *   (items: Array<Item>, {\n   *     selectedItems: Array<Item>,\n   *     itemToString: Item => string,\n   *     compareItems: (itemA: string, itemB: string, {\n   *       locale: string\n   *     }) => number,\n   *     locale: string,\n   *   }) => Array<Item>\n   */\n  sortItems: _propTypes.default.func.isRequired\n};\nexports.sortingPropTypes = sortingPropTypes;"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":7,"column":0}},{"generated":{"line":12,"column":0},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":1,"column":0}},{"generated":{"line":18,"column":0},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":8,"column":7}},{"name":"sortingPropTypes","generated":{"line":18,"column":4},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":8,"column":11}},{"generated":{"line":18,"column":20},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":8,"column":27}},{"generated":{"line":18,"column":23},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":8,"column":30}},{"generated":{"line":19,"column":0},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":9,"column":2}},{"name":"compareItems","generated":{"line":26,"column":0},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":16,"column":2}},{"name":"compareItems","generated":{"line":26,"column":2},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":16,"column":2}},{"generated":{"line":26,"column":14},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":16,"column":14}},{"name":"PropTypes","generated":{"line":26,"column":16},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":16,"column":16}},{"name":"func","generated":{"line":26,"column":35},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":16,"column":26}},{"generated":{"line":26,"column":39},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":16,"column":16}},{"name":"isRequired","generated":{"line":26,"column":40},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":16,"column":31}},{"generated":{"line":26,"column":50},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":8,"column":30}},{"generated":{"line":28,"column":0},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":18,"column":2}},{"name":"sortItems","generated":{"line":46,"column":0},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":36,"column":2}},{"name":"sortItems","generated":{"line":46,"column":2},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":36,"column":2}},{"generated":{"line":46,"column":11},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":36,"column":11}},{"name":"PropTypes","generated":{"line":46,"column":13},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":36,"column":13}},{"name":"func","generated":{"line":46,"column":32},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":36,"column":23}},{"generated":{"line":46,"column":36},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":36,"column":13}},{"name":"isRequired","generated":{"line":46,"column":37},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":36,"column":28}},{"generated":{"line":47,"column":0},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":8,"column":30}},{"generated":{"line":47,"column":1},"source":"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js","original":{"line":8,"column":7}}],"sources":{"../../../node_modules/carbon-components-react/es/components/MultiSelect/MultiSelectPropTypes.js":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nexport var sortingPropTypes = {\n  /**\n   * Provide a compare function that is used to determine the ordering of\n   * options. `compareItems` has the following function signature:\n   *\n   * compareFunction :\n   *  (itemA: string, itemB: string, { locale: string }) => number\n   */\n  compareItems: PropTypes.func.isRequired,\n\n  /**\n   * Provide a method that sorts all options in the control. Overriding this\n   * prop means that you also have to handle the sort logic for selected versus\n   * un-selected items. If you just want to control ordering, consider the\n   * `compareItems` prop instead.\n   *\n   * `sortItems` has the following signature:\n   *\n   * sortItems :\n   *   (items: Array<Item>, {\n   *     selectedItems: Array<Item>,\n   *     itemToString: Item => string,\n   *     compareItems: (itemA: string, itemB: string, {\n   *       locale: string\n   *     }) => number,\n   *     locale: string,\n   *   }) => Array<Item>\n   */\n  sortItems: PropTypes.func.isRequired\n};"},"lineCount":null}},"error":null,"hash":"4ca25145b65b5fab1d89410812f33f33","cacheData":{"env":{}}}