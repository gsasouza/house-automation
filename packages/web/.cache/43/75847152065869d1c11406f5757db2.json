{"id":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","dependencies":[{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\packages\\web\\package.json","includedInParent":true,"mtime":1561012880883},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\blueimp-load-image\\package.json","includedInParent":true,"mtime":1561012225894},{"name":"./load-image","loc":{"line":24,"column":20},"parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\blueimp-load-image\\js\\load-image-meta.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\blueimp-load-image\\js\\load-image.js"}],"generated":{"js":"var define;\n/*\n * JavaScript Load Image Meta\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2013, Sebastian Tschan\n * https://blueimp.net\n *\n * Image meta data handling implementation\n * based on the help and contribution of\n * Achim StÃ¶hr.\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, Blob */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  var hasblobSlice =\n    typeof Blob !== 'undefined' &&\n    (Blob.prototype.slice ||\n      Blob.prototype.webkitSlice ||\n      Blob.prototype.mozSlice)\n\n  loadImage.blobSlice =\n    hasblobSlice &&\n    function () {\n      var slice = this.slice || this.webkitSlice || this.mozSlice\n      return slice.apply(this, arguments)\n    }\n\n  loadImage.metaDataParsers = {\n    jpeg: {\n      0xffe1: [], // APP1 marker\n      0xffed: [] // APP13 marker\n    }\n  }\n\n  // Parses image meta data and calls the callback with an object argument\n  // with the following properties:\n  // * imageHead: The complete image head as ArrayBuffer (Uint8Array for IE10)\n  // The options argument accepts an object and supports the following\n  // properties:\n  // * maxMetaDataSize: Defines the maximum number of bytes to parse.\n  // * disableImageHead: Disables creating the imageHead property.\n  loadImage.parseMetaData = function (file, callback, options, data) {\n    options = options || {}\n    data = data || {}\n    var that = this\n    // 256 KiB should contain all EXIF/ICC/IPTC segments:\n    var maxMetaDataSize = options.maxMetaDataSize || 262144\n    var noMetaData = !(\n      typeof DataView !== 'undefined' &&\n      file &&\n      file.size >= 12 &&\n      file.type === 'image/jpeg' &&\n      loadImage.blobSlice\n    )\n    if (\n      noMetaData ||\n      !loadImage.readFile(\n        loadImage.blobSlice.call(file, 0, maxMetaDataSize),\n        function (e) {\n          if (e.target.error) {\n            // FileReader error\n            console.log(e.target.error)\n            callback(data)\n            return\n          }\n          // Note on endianness:\n          // Since the marker and length bytes in JPEG files are always\n          // stored in big endian order, we can leave the endian parameter\n          // of the DataView methods undefined, defaulting to big endian.\n          var buffer = e.target.result\n          var dataView = new DataView(buffer)\n          var offset = 2\n          var maxOffset = dataView.byteLength - 4\n          var headLength = offset\n          var markerBytes\n          var markerLength\n          var parsers\n          var i\n          // Check for the JPEG marker (0xffd8):\n          if (dataView.getUint16(0) === 0xffd8) {\n            while (offset < maxOffset) {\n              markerBytes = dataView.getUint16(offset)\n              // Search for APPn (0xffeN) and COM (0xfffe) markers,\n              // which contain application-specific meta-data like\n              // Exif, ICC and IPTC data and text comments:\n              if (\n                (markerBytes >= 0xffe0 && markerBytes <= 0xffef) ||\n                markerBytes === 0xfffe\n              ) {\n                // The marker bytes (2) are always followed by\n                // the length bytes (2), indicating the length of the\n                // marker segment, which includes the length bytes,\n                // but not the marker bytes, so we add 2:\n                markerLength = dataView.getUint16(offset + 2) + 2\n                if (offset + markerLength > dataView.byteLength) {\n                  console.log('Invalid meta data: Invalid segment size.')\n                  break\n                }\n                parsers = loadImage.metaDataParsers.jpeg[markerBytes]\n                if (parsers) {\n                  for (i = 0; i < parsers.length; i += 1) {\n                    parsers[i].call(\n                      that,\n                      dataView,\n                      offset,\n                      markerLength,\n                      data,\n                      options\n                    )\n                  }\n                }\n                offset += markerLength\n                headLength = offset\n              } else {\n                // Not an APPn or COM marker, probably safe to\n                // assume that this is the end of the meta data\n                break\n              }\n            }\n            // Meta length must be longer than JPEG marker (2)\n            // plus APPn marker (2), followed by length bytes (2):\n            if (!options.disableImageHead && headLength > 6) {\n              if (buffer.slice) {\n                data.imageHead = buffer.slice(0, headLength)\n              } else {\n                // Workaround for IE10, which does not yet\n                // support ArrayBuffer.slice:\n                data.imageHead = new Uint8Array(buffer).subarray(0, headLength)\n              }\n            }\n          } else {\n            console.log('Invalid JPEG file: Missing JPEG marker.')\n          }\n          callback(data)\n        },\n        'readAsArrayBuffer'\n      )\n    ) {\n      callback(data)\n    }\n  }\n\n  // Determines if meta data should be loaded automatically:\n  loadImage.hasMetaOption = function (options) {\n    return options && options.meta\n  }\n\n  var originalTransform = loadImage.transform\n  loadImage.transform = function (img, options, callback, file, data) {\n    if (loadImage.hasMetaOption(options)) {\n      loadImage.parseMetaData(\n        file,\n        function (data) {\n          originalTransform.call(loadImage, img, options, callback, file, data)\n        },\n        options,\n        data\n      )\n    } else {\n      originalTransform.apply(loadImage, arguments)\n    }\n  }\n})\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":1,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":2,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":3,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":4,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":5,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":6,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":7,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":8,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":9,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":10,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":11,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":12,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":13,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":14,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":15,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":16,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":17,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":18,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":19,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":20,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":21,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":22,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":23,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":24,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":25,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":26,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":27,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":28,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":29,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":30,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":31,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":32,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":33,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":34,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":35,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":36,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":37,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":38,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":39,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":40,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":41,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":42,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":43,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":44,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":45,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":46,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":47,"column":0},"generated":{"line":48,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":48,"column":0},"generated":{"line":49,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":49,"column":0},"generated":{"line":50,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":50,"column":0},"generated":{"line":51,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":51,"column":0},"generated":{"line":52,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":52,"column":0},"generated":{"line":53,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":53,"column":0},"generated":{"line":54,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":54,"column":0},"generated":{"line":55,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":55,"column":0},"generated":{"line":56,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":56,"column":0},"generated":{"line":57,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":57,"column":0},"generated":{"line":58,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":58,"column":0},"generated":{"line":59,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":59,"column":0},"generated":{"line":60,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":60,"column":0},"generated":{"line":61,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":61,"column":0},"generated":{"line":62,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":62,"column":0},"generated":{"line":63,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":63,"column":0},"generated":{"line":64,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":64,"column":0},"generated":{"line":65,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":65,"column":0},"generated":{"line":66,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":66,"column":0},"generated":{"line":67,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":67,"column":0},"generated":{"line":68,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":68,"column":0},"generated":{"line":69,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":69,"column":0},"generated":{"line":70,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":70,"column":0},"generated":{"line":71,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":71,"column":0},"generated":{"line":72,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":72,"column":0},"generated":{"line":73,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":73,"column":0},"generated":{"line":74,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":74,"column":0},"generated":{"line":75,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":75,"column":0},"generated":{"line":76,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":76,"column":0},"generated":{"line":77,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":77,"column":0},"generated":{"line":78,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":78,"column":0},"generated":{"line":79,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":79,"column":0},"generated":{"line":80,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":80,"column":0},"generated":{"line":81,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":81,"column":0},"generated":{"line":82,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":82,"column":0},"generated":{"line":83,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":83,"column":0},"generated":{"line":84,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":84,"column":0},"generated":{"line":85,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":85,"column":0},"generated":{"line":86,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":86,"column":0},"generated":{"line":87,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":87,"column":0},"generated":{"line":88,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":88,"column":0},"generated":{"line":89,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":89,"column":0},"generated":{"line":90,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":90,"column":0},"generated":{"line":91,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":91,"column":0},"generated":{"line":92,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":92,"column":0},"generated":{"line":93,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":93,"column":0},"generated":{"line":94,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":94,"column":0},"generated":{"line":95,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":95,"column":0},"generated":{"line":96,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":96,"column":0},"generated":{"line":97,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":97,"column":0},"generated":{"line":98,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":98,"column":0},"generated":{"line":99,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":99,"column":0},"generated":{"line":100,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":100,"column":0},"generated":{"line":101,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":101,"column":0},"generated":{"line":102,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":102,"column":0},"generated":{"line":103,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":103,"column":0},"generated":{"line":104,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":104,"column":0},"generated":{"line":105,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":105,"column":0},"generated":{"line":106,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":106,"column":0},"generated":{"line":107,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":107,"column":0},"generated":{"line":108,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":108,"column":0},"generated":{"line":109,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":109,"column":0},"generated":{"line":110,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":110,"column":0},"generated":{"line":111,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":111,"column":0},"generated":{"line":112,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":112,"column":0},"generated":{"line":113,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":113,"column":0},"generated":{"line":114,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":114,"column":0},"generated":{"line":115,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":115,"column":0},"generated":{"line":116,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":116,"column":0},"generated":{"line":117,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":117,"column":0},"generated":{"line":118,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":118,"column":0},"generated":{"line":119,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":119,"column":0},"generated":{"line":120,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":120,"column":0},"generated":{"line":121,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":121,"column":0},"generated":{"line":122,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":122,"column":0},"generated":{"line":123,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":123,"column":0},"generated":{"line":124,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":124,"column":0},"generated":{"line":125,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":125,"column":0},"generated":{"line":126,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":126,"column":0},"generated":{"line":127,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":127,"column":0},"generated":{"line":128,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":128,"column":0},"generated":{"line":129,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":129,"column":0},"generated":{"line":130,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":130,"column":0},"generated":{"line":131,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":131,"column":0},"generated":{"line":132,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":132,"column":0},"generated":{"line":133,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":133,"column":0},"generated":{"line":134,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":134,"column":0},"generated":{"line":135,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":135,"column":0},"generated":{"line":136,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":136,"column":0},"generated":{"line":137,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":137,"column":0},"generated":{"line":138,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":138,"column":0},"generated":{"line":139,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":139,"column":0},"generated":{"line":140,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":140,"column":0},"generated":{"line":141,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":141,"column":0},"generated":{"line":142,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":142,"column":0},"generated":{"line":143,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":143,"column":0},"generated":{"line":144,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":144,"column":0},"generated":{"line":145,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":145,"column":0},"generated":{"line":146,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":146,"column":0},"generated":{"line":147,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":147,"column":0},"generated":{"line":148,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":148,"column":0},"generated":{"line":149,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":149,"column":0},"generated":{"line":150,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":150,"column":0},"generated":{"line":151,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":151,"column":0},"generated":{"line":152,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":152,"column":0},"generated":{"line":153,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":153,"column":0},"generated":{"line":154,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":154,"column":0},"generated":{"line":155,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":155,"column":0},"generated":{"line":156,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":156,"column":0},"generated":{"line":157,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":157,"column":0},"generated":{"line":158,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":158,"column":0},"generated":{"line":159,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":159,"column":0},"generated":{"line":160,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":160,"column":0},"generated":{"line":161,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":161,"column":0},"generated":{"line":162,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":162,"column":0},"generated":{"line":163,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":163,"column":0},"generated":{"line":164,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":164,"column":0},"generated":{"line":165,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":165,"column":0},"generated":{"line":166,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":166,"column":0},"generated":{"line":167,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":167,"column":0},"generated":{"line":168,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":168,"column":0},"generated":{"line":169,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":169,"column":0},"generated":{"line":170,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":170,"column":0},"generated":{"line":171,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":171,"column":0},"generated":{"line":172,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":172,"column":0},"generated":{"line":173,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":173,"column":0},"generated":{"line":174,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":174,"column":0},"generated":{"line":175,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":175,"column":0},"generated":{"line":176,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":176,"column":0},"generated":{"line":177,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":177,"column":0},"generated":{"line":178,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":178,"column":0},"generated":{"line":179,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":179,"column":0},"generated":{"line":180,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":180,"column":0},"generated":{"line":181,"column":0}},{"source":"../../../node_modules/blueimp-load-image/js/load-image-meta.js","original":{"line":181,"column":0},"generated":{"line":182,"column":0}}],"sources":{"../../../node_modules/blueimp-load-image/js/load-image-meta.js":"/*\n * JavaScript Load Image Meta\n * https://github.com/blueimp/JavaScript-Load-Image\n *\n * Copyright 2013, Sebastian Tschan\n * https://blueimp.net\n *\n * Image meta data handling implementation\n * based on the help and contribution of\n * Achim StÃ¶hr.\n *\n * Licensed under the MIT license:\n * https://opensource.org/licenses/MIT\n */\n\n/* global define, Blob */\n\n;(function (factory) {\n  'use strict'\n  if (typeof define === 'function' && define.amd) {\n    // Register as an anonymous AMD module:\n    define(['./load-image'], factory)\n  } else if (typeof module === 'object' && module.exports) {\n    factory(require('./load-image'))\n  } else {\n    // Browser globals:\n    factory(window.loadImage)\n  }\n})(function (loadImage) {\n  'use strict'\n\n  var hasblobSlice =\n    typeof Blob !== 'undefined' &&\n    (Blob.prototype.slice ||\n      Blob.prototype.webkitSlice ||\n      Blob.prototype.mozSlice)\n\n  loadImage.blobSlice =\n    hasblobSlice &&\n    function () {\n      var slice = this.slice || this.webkitSlice || this.mozSlice\n      return slice.apply(this, arguments)\n    }\n\n  loadImage.metaDataParsers = {\n    jpeg: {\n      0xffe1: [], // APP1 marker\n      0xffed: [] // APP13 marker\n    }\n  }\n\n  // Parses image meta data and calls the callback with an object argument\n  // with the following properties:\n  // * imageHead: The complete image head as ArrayBuffer (Uint8Array for IE10)\n  // The options argument accepts an object and supports the following\n  // properties:\n  // * maxMetaDataSize: Defines the maximum number of bytes to parse.\n  // * disableImageHead: Disables creating the imageHead property.\n  loadImage.parseMetaData = function (file, callback, options, data) {\n    options = options || {}\n    data = data || {}\n    var that = this\n    // 256 KiB should contain all EXIF/ICC/IPTC segments:\n    var maxMetaDataSize = options.maxMetaDataSize || 262144\n    var noMetaData = !(\n      typeof DataView !== 'undefined' &&\n      file &&\n      file.size >= 12 &&\n      file.type === 'image/jpeg' &&\n      loadImage.blobSlice\n    )\n    if (\n      noMetaData ||\n      !loadImage.readFile(\n        loadImage.blobSlice.call(file, 0, maxMetaDataSize),\n        function (e) {\n          if (e.target.error) {\n            // FileReader error\n            console.log(e.target.error)\n            callback(data)\n            return\n          }\n          // Note on endianness:\n          // Since the marker and length bytes in JPEG files are always\n          // stored in big endian order, we can leave the endian parameter\n          // of the DataView methods undefined, defaulting to big endian.\n          var buffer = e.target.result\n          var dataView = new DataView(buffer)\n          var offset = 2\n          var maxOffset = dataView.byteLength - 4\n          var headLength = offset\n          var markerBytes\n          var markerLength\n          var parsers\n          var i\n          // Check for the JPEG marker (0xffd8):\n          if (dataView.getUint16(0) === 0xffd8) {\n            while (offset < maxOffset) {\n              markerBytes = dataView.getUint16(offset)\n              // Search for APPn (0xffeN) and COM (0xfffe) markers,\n              // which contain application-specific meta-data like\n              // Exif, ICC and IPTC data and text comments:\n              if (\n                (markerBytes >= 0xffe0 && markerBytes <= 0xffef) ||\n                markerBytes === 0xfffe\n              ) {\n                // The marker bytes (2) are always followed by\n                // the length bytes (2), indicating the length of the\n                // marker segment, which includes the length bytes,\n                // but not the marker bytes, so we add 2:\n                markerLength = dataView.getUint16(offset + 2) + 2\n                if (offset + markerLength > dataView.byteLength) {\n                  console.log('Invalid meta data: Invalid segment size.')\n                  break\n                }\n                parsers = loadImage.metaDataParsers.jpeg[markerBytes]\n                if (parsers) {\n                  for (i = 0; i < parsers.length; i += 1) {\n                    parsers[i].call(\n                      that,\n                      dataView,\n                      offset,\n                      markerLength,\n                      data,\n                      options\n                    )\n                  }\n                }\n                offset += markerLength\n                headLength = offset\n              } else {\n                // Not an APPn or COM marker, probably safe to\n                // assume that this is the end of the meta data\n                break\n              }\n            }\n            // Meta length must be longer than JPEG marker (2)\n            // plus APPn marker (2), followed by length bytes (2):\n            if (!options.disableImageHead && headLength > 6) {\n              if (buffer.slice) {\n                data.imageHead = buffer.slice(0, headLength)\n              } else {\n                // Workaround for IE10, which does not yet\n                // support ArrayBuffer.slice:\n                data.imageHead = new Uint8Array(buffer).subarray(0, headLength)\n              }\n            }\n          } else {\n            console.log('Invalid JPEG file: Missing JPEG marker.')\n          }\n          callback(data)\n        },\n        'readAsArrayBuffer'\n      )\n    ) {\n      callback(data)\n    }\n  }\n\n  // Determines if meta data should be loaded automatically:\n  loadImage.hasMetaOption = function (options) {\n    return options && options.meta\n  }\n\n  var originalTransform = loadImage.transform\n  loadImage.transform = function (img, options, callback, file, data) {\n    if (loadImage.hasMetaOption(options)) {\n      loadImage.parseMetaData(\n        file,\n        function (data) {\n          originalTransform.call(loadImage, img, options, callback, file, data)\n        },\n        options,\n        data\n      )\n    } else {\n      originalTransform.apply(loadImage, arguments)\n    }\n  }\n})\n"},"lineCount":182}},"error":null,"hash":"e67b01bbd525bf0df24d4fd8f7fe1ce8","cacheData":{"env":{}}}