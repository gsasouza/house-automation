{"id":"../../../node_modules/lodash/_createBaseEach.js","dependencies":[{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\packages\\web\\package.json","includedInParent":true,"mtime":1561054270676},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1559172019662},{"name":"./isArrayLike","loc":{"line":1,"column":26},"parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\lodash\\_createBaseEach.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\lodash\\isArrayLike.js"}],"generated":{"js":"var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/lodash/_createBaseEach.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}}],"sources":{"../../../node_modules/lodash/_createBaseEach.js":"var isArrayLike = require('./isArrayLike');\n\n/**\n * Creates a `baseEach` or `baseEachRight` function.\n *\n * @private\n * @param {Function} eachFunc The function to iterate over a collection.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {Function} Returns the new base function.\n */\nfunction createBaseEach(eachFunc, fromRight) {\n  return function(collection, iteratee) {\n    if (collection == null) {\n      return collection;\n    }\n    if (!isArrayLike(collection)) {\n      return eachFunc(collection, iteratee);\n    }\n    var length = collection.length,\n        index = fromRight ? length : -1,\n        iterable = Object(collection);\n\n    while ((fromRight ? index-- : ++index < length)) {\n      if (iteratee(iterable[index], index, iterable) === false) {\n        break;\n      }\n    }\n    return collection;\n  };\n}\n\nmodule.exports = createBaseEach;\n"},"lineCount":33}},"error":null,"hash":"0ac9e318cadf005b0514854a0dfb28c3","cacheData":{"env":{}}}