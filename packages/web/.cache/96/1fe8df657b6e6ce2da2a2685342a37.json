{"id":"../../../node_modules/lodash/_baseIsNative.js","dependencies":[{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\packages\\web\\package.json","includedInParent":true,"mtime":1561054270676},{"name":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\lodash\\package.json","includedInParent":true,"mtime":1559172019662},{"name":"./isFunction","loc":{"line":1,"column":25},"parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\lodash\\_baseIsNative.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\lodash\\isFunction.js"},{"name":"./_isMasked","loc":{"line":2,"column":23},"parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\lodash\\_baseIsNative.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\lodash\\_isMasked.js"},{"name":"./isObject","loc":{"line":3,"column":23},"parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\lodash\\_baseIsNative.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\lodash\\isObject.js"},{"name":"./_toSource","loc":{"line":4,"column":23},"parent":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\lodash\\_baseIsNative.js","resolved":"C:\\Users\\gabri\\Documents\\usp\\codes\\eletronica-2\\node_modules\\lodash\\_toSource.js"}],"generated":{"js":"var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"../../../node_modules/lodash/_baseIsNative.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}}],"sources":{"../../../node_modules/lodash/_baseIsNative.js":"var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n"},"lineCount":48}},"error":null,"hash":"d408f4fc35f69b605620eea15166179a","cacheData":{"env":{}}}