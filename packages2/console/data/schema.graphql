"""Admin User data"""
type AdminUser implements Node {
  """The ID of an object"""
  id: ID!
  _id: String
  name: String
  username: String
  email: String
}

input AdminUserLoginInput {
  username: String!
  password: String!
  clientMutationId: String
}

type AdminUserLoginPayload {
  token: String
  error: String
  clientMutationId: String
}

"""Board data"""
type Board implements Node {
  """The ID of an object"""
  id: ID!
  _id: String
  name: String
  type: String
  host: String
  port: String
  connected: Boolean
  createdBy: User
}

input BoardAddInput {
  name: String!
  type: String!
  port: String
  host: String
  clientMutationId: String
}

type BoardAddPayload {
  boardEdge: BoardEdge
  error: String
  clientMutationId: String
}

"""A connection to a list of items."""
type BoardConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [BoardEdge]
  count: Int
}

"""An edge in a connection."""
type BoardEdge {
  """The item at the end of the edge"""
  node: Board

  """A cursor for use in pagination"""
  cursor: String!
}

"""Device data"""
type Device implements Node {
  """The ID of an object"""
  id: ID!
  _id: String
  name: String
  type: String
  board: Board
  pin: String
  state: Boolean
  connected: Boolean
  room: Device
  createdBy: User
}

input DeviceAddInput {
  name: String!
  type: String!
  pin: Int!
  board: ID!
  room: ID!
  clientMutationId: String
}

type DeviceAddPayload {
  deviceEdge: DeviceEdge
  error: String
  clientMutationId: String
}

type DeviceChangedStatePayload {
  deviceEdge: DeviceEdge
}

input DeviceChangeStateInput {
  id: ID!
  state: Boolean!
  clientMutationId: String
}

type DeviceChangeStatePayload {
  deviceEdge: DeviceEdge
  error: String
  clientMutationId: String
}

"""A connection to a list of items."""
type DeviceConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [DeviceEdge]
  count: Int
}

"""An edge in a connection."""
type DeviceEdge {
  """The item at the end of the edge"""
  node: Device

  """A cursor for use in pagination"""
  cursor: String!
}

union Me = User | AdminUser

type Mutation {
  UserLogin(input: UserLoginInput!): UserLoginPayload
  RoomAdd(input: RoomAddInput!): RoomAddPayload
  BoardAdd(input: BoardAddInput!): BoardAddPayload
  DeviceAdd(input: DeviceAddInput!): DeviceAddPayload
  DeviceChangeState(input: DeviceChangeStateInput!): DeviceChangeStatePayload
  AdminUserLogin(input: AdminUserLoginInput!): AdminUserLoginPayload
}

"""An object with an ID"""
interface Node {
  """The id of the object."""
  id: ID!
}

"""Information about pagination in a connection."""
type PageInfo {
  """When paginating forwards, are there more items?"""
  hasNextPage: Boolean!

  """When paginating backwards, are there more items?"""
  hasPreviousPage: Boolean!

  """When paginating backwards, the cursor to continue."""
  startCursor: String

  """When paginating forwards, the cursor to continue."""
  endCursor: String
}

"""The root of all... queries"""
type Query {
  """Fetches an object given its ID"""
  node(
    """The ID of an object"""
    id: ID!
  ): Node
  me: Me
  users(after: String, first: Int, before: String, last: Int, search: String): UserConnection
  rooms(after: String, first: Int, before: String, last: Int, search: String): RoomConnection
  boards(after: String, first: Int, before: String, last: Int, search: String): BoardConnection
  devices(after: String, first: Int, before: String, last: Int, search: String): DeviceConnection
}

"""Room data"""
type Room implements Node {
  """The ID of an object"""
  id: ID!
  _id: String
  name: String
  type: String
  createdBy: User
  boardIosConnectedCount: Int
  boardIosConnected(after: String, first: Int, before: String, last: Int, search: String): DeviceConnection
}

input RoomAddInput {
  name: String!
  type: String!
  clientMutationId: String
}

type RoomAddPayload {
  roomEdge: RoomEdge
  error: String
  clientMutationId: String
}

"""A connection to a list of items."""
type RoomConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [RoomEdge]
  count: Int
}

"""An edge in a connection."""
type RoomEdge {
  """The item at the end of the edge"""
  node: Room

  """A cursor for use in pagination"""
  cursor: String!
}

type Subscription {
  DeviceChangedState: DeviceChangedStatePayload
}

"""User data"""
type User implements Node {
  """The ID of an object"""
  id: ID!
  _id: String
  name: String
  isAdmin: Boolean
  username: String
}

"""A connection to a list of items."""
type UserConnection {
  """Information to aid in pagination."""
  pageInfo: PageInfo!

  """A list of edges."""
  edges: [UserEdge]
  count: Int
}

"""An edge in a connection."""
type UserEdge {
  """The item at the end of the edge"""
  node: User

  """A cursor for use in pagination"""
  cursor: String!
}

input UserLoginInput {
  username: String!
  password: String!
  clientMutationId: String
}

type UserLoginPayload {
  token: String
  error: String
  clientMutationId: String
}
