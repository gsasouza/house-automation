version: '3'
services:
  nginx:
    container_name: nginx
    image: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    networks:
      - public
      - mongo-compose-network
  remote-server: 
    container_name: remote-server
    build:
      context: ./remote-server
      target: remote-server-dev
      # target: remote-server-prod #uncomment this line to build for production 

    env_file:
      - ./remote-server/.env
    deploy:
      mode: replicated
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    depends_on:
      - kafdrop
    networks:
      - broker-kafka
      - mongo-compose-network
      
  client:
    container_name: client
    build:
      context: ./client
      target: client-dev
      # target: client-prod
    env_file:
      - ./client/.env
    deploy:
      mode: replicated
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
    depends_on:
      - kafdrop
    networks:
      - broker-kafka
      - public
      - mongo-compose-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    networks:
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    networks:
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    networks:
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 19000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  mongo:
    image: mongo
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: root
#      MONGO_INITDB_ROOT_PASSWORD: MongoDB!
    ports:
      - "27017:27017"
    volumes:
      - dbdata:/data/db
  #  networks:
  #    - mongo-compose-network

volumes:
  dbdata:

networks:
  broker-kafka:
    driver: bridge
  mongo-compose-network:
    driver: bridge
  public:
    driver: bridge
